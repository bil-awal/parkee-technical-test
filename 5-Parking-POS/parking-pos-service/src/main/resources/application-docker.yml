spring:
  # Database configuration untuk Docker
  datasource:
    url: jdbc:postgresql://postgres:5432/parking_pos_db
    username: USERNAME
    password: PASSWORD
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1800000
      connection-timeout: 30000

  # Redis configuration untuk Docker
  data:
    redis:
      host: redis
      port: 6379
      password:
      timeout: 60000ms
      database: 0
      lettuce:
        pool:
          max-active: 16
          max-idle: 8
          min-idle: 2
          max-wait: -1ms

  # JPA Configuration untuk Docker
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        show_sql: false
        format_sql: false
        jdbc:
          batch_size: 50
        connection:
          provider_disables_autocommit: true

  # Jackson Configuration
  jackson:
    time-zone: Asia/Jakarta

# Application Configuration untuk Docker
app:
  base-url: http://localhost:8081
  jwt:
    secret: ${APP_JWT_SECRET:docker-parkee-secret-key-change-this-in-production}
    access-token-validity: 3600000  # 1 hour
    refresh-token-validity: 86400000 # 24 hours

# File Upload Configuration untuk Docker
file-upload:
  base-path: /app/uploads
  max-file-size: 10485760 # 10MB
  max-request-size: 26214400 # 25MB
  create-directories: true
  temp-directory: /tmp/parking-uploads

# Parking Configuration
parking:
  photos:
    required:
      check-in: false
      check-out: false

# CORS Configuration untuk Docker
cors:
  allowed-origins:
    - http://localhost:3000
    - http://localhost:5173
    - http://localhost:5174
    - http://localhost:80
    - http://localhost

# Management endpoints untuk Docker
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  health:
    redis:
      enabled: true
    db:
      enabled: true

# Logging untuk Docker
logging:
  level:
    root: INFO
    com.parkee.parkingpos: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
  file:
    name: /app/logs/parking-pos.log