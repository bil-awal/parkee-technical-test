version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: parking-pos-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: parking_pos_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 120498
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      TZ: Asia/Jakarta
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - parking-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d parking_pos_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: parking-pos-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/etc/redis/redis.conf
    networks:
      - parking-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: redis-server /etc/redis/redis.conf --appendonly yes
    environment:
      TZ: Asia/Jakarta

  # Spring Boot Application
  parking-pos-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: parking-pos-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/parking_pos_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 120498

      # Redis Configuration
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379

      # Application Configuration
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8081

      # File Upload Configuration
      FILE_UPLOAD_BASE_PATH: /app/uploads

      # JWT Configuration (Override for Docker)
      APP_JWT_SECRET: docker-parkee-secret-key-for-production-use-strong-secret-key-here

      # Timezone
      TZ: Asia/Jakarta

      # JVM Options
      JAVA_OPTS: >-
        -XX:+UseG1GC
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=75.0
        -XX:+OptimizeStringConcat
        -XX:+UseStringDeduplication
        -Djava.security.egd=file:/dev/./urandom
        -Dspring.profiles.active=docker
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
      - ./temp:/tmp
    networks:
      - parking-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: parking-pos-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - app_uploads:/var/www/uploads:ro
    depends_on:
      - parking-pos-app
    networks:
      - parking-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# Networks
networks:
  parking-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local