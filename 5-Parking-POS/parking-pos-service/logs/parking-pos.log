2025-06-17 03:12:44.038 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 28604 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 03:12:44.048 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 03:12:44.050 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 03:12:46.104 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 03:12:46.108 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 03:12:46.380 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 254 ms. Found 5 JPA repository interfaces.
2025-06-17 03:12:46.410 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 03:12:46.412 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 03:12:46.442 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:12:46.443 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:12:46.444 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:12:46.444 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:12:46.445 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:12:46.446 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-06-17 03:12:47.984 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 03:12:48.006 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 03:12:48.006 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 03:12:48.105 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 03:12:48.105 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3878 ms
2025-06-17 03:12:48.826 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 03:12:49.167 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@47c5cbf2
2025-06-17 03:12:49.169 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 03:12:49.214 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 03:12:49.299 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.058s)
2025-06-17 03:12:49.336 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 03:12:49.344 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 03:12:49.582 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 03:12:49.693 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 03:12:49.753 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 03:12:50.252 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 03:12:50.341 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 03:12:52.124 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 03:12:52.184 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 03:12:52.846 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 03:12:56.052 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 03:12:56.195 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 03:12:56.884 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 03:12:58.180 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 03:12:58.204 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 15.201 seconds (process running for 15.883)
2025-06-17 03:12:58.523 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 03:13:05.989 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 03:13:05.991 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 03:13:05.996 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-06-17 03:13:07.111 [http-nio-8081-exec-9] INFO  org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 263 ms
2025-06-17 03:13:18.803 [http-nio-8081-exec-7] INFO  org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 482 ms
2025-06-17 03:15:25.517 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 03:15:25.529 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 03:15:25.539 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 03:15:28.289 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 28696 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 03:15:28.292 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 03:15:28.293 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 03:15:29.875 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 03:15:29.878 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 03:15:30.161 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 272 ms. Found 5 JPA repository interfaces.
2025-06-17 03:15:30.190 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 03:15:30.192 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 03:15:30.215 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:15:30.216 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:15:30.216 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:15:30.217 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:15:30.217 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:15:30.217 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-06-17 03:15:31.592 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 03:15:31.622 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 03:15:31.622 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 03:15:31.733 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 03:15:31.734 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3368 ms
2025-06-17 03:15:32.344 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 03:15:32.646 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4b511e61
2025-06-17 03:15:32.648 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 03:15:32.691 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 03:15:32.749 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.033s)
2025-06-17 03:15:32.841 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 03:15:32.844 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 03:15:33.055 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 03:15:33.132 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 03:15:33.179 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 03:15:33.613 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 03:15:33.697 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 03:15:35.355 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 03:15:35.420 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 03:15:35.974 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 03:15:39.257 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 03:15:39.437 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 03:15:40.090 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 03:15:41.342 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 03:15:41.367 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 14.038 seconds (process running for 14.606)
2025-06-17 03:15:41.614 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 03:15:46.228 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 03:15:46.228 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 03:15:46.233 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-06-17 03:15:47.582 [http-nio-8081-exec-8] INFO  org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 682 ms
2025-06-17 03:17:22.614 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 03:17:22.919 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 03:17:22.958 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 03:19:08.017 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 03:19:08.033 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 03:19:08.040 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 03:19:13.117 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 28818 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 03:19:13.119 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 03:19:13.130 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 03:19:14.893 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 03:19:14.895 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 03:19:15.131 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 224 ms. Found 5 JPA repository interfaces.
2025-06-17 03:19:15.201 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 03:19:15.204 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 03:19:15.257 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:19:15.258 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:19:15.259 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:19:15.260 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:19:15.261 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:19:15.262 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 0 Redis repository interfaces.
2025-06-17 03:19:17.122 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 03:19:17.146 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 03:19:17.147 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 03:19:17.267 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 03:19:17.268 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4059 ms
2025-06-17 03:19:18.090 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 03:19:18.601 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@56b704ea
2025-06-17 03:19:18.604 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 03:19:18.681 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 03:19:18.778 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.046s)
2025-06-17 03:19:18.799 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 03:19:18.804 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 03:19:18.968 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 03:19:19.096 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 03:19:19.158 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 03:19:19.617 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 03:19:19.692 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 03:19:21.401 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 03:19:21.460 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 03:19:22.029 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 03:19:24.944 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 03:19:25.074 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 03:19:25.779 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 03:19:26.963 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 03:19:26.990 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 14.87 seconds (process running for 15.557)
2025-06-17 03:19:27.248 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 03:19:29.440 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 03:19:29.441 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 03:19:29.449 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2025-06-17 03:19:29.635 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 03:19:29.842 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 03:19:29.859 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 03:19:38.532 [http-nio-8081-exec-3] INFO  org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 578 ms
2025-06-17 03:39:35.442 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 03:39:35.465 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 03:39:35.476 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 03:39:43.436 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 29657 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 03:39:43.482 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 03:39:43.484 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 03:39:46.351 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 03:39:46.354 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 03:39:46.706 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 337 ms. Found 5 JPA repository interfaces.
2025-06-17 03:39:46.740 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 03:39:46.743 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 03:39:46.778 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:39:46.780 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:39:46.781 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:39:46.781 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:39:46.782 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:39:46.782 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2025-06-17 03:39:49.028 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 03:39:49.061 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 03:39:49.062 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 03:39:49.293 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 03:39:49.294 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5607 ms
2025-06-17 03:39:50.414 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 03:39:50.793 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a3bc0da
2025-06-17 03:39:50.795 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 03:39:50.862 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 03:39:50.990 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.085s)
2025-06-17 03:39:51.082 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 03:39:51.086 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 03:39:51.335 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 03:39:51.491 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 03:39:51.590 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 03:39:52.220 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 03:39:52.336 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 03:39:54.760 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 03:39:54.849 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 03:39:55.654 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 03:39:59.332 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 03:39:59.541 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 03:40:00.482 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 03:40:02.506 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 03:40:02.553 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 20.839 seconds (process running for 22.007)
2025-06-17 03:40:02.965 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 03:40:26.490 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 03:40:26.494 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 03:40:26.501 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 03:40:30.735 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 29682 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 03:40:30.738 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 03:40:30.741 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 03:40:33.319 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 03:40:33.323 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 03:40:33.657 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 319 ms. Found 5 JPA repository interfaces.
2025-06-17 03:40:33.690 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 03:40:33.692 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 03:40:33.735 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:40:33.736 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:40:33.737 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:40:33.737 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:40:33.737 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 03:40:33.737 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2025-06-17 03:40:35.474 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 03:40:35.527 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 03:40:35.528 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 03:40:35.644 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 03:40:35.645 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4777 ms
2025-06-17 03:40:36.721 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 03:40:37.065 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70421a08
2025-06-17 03:40:37.067 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 03:40:37.118 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 03:40:37.214 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.055s)
2025-06-17 03:40:37.266 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 03:40:37.270 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 03:40:37.446 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 03:40:37.552 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 03:40:37.608 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 03:40:38.081 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 03:40:38.157 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 03:40:39.889 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 03:40:39.950 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 03:40:40.546 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 03:40:44.554 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 03:40:44.739 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 03:40:45.563 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 03:40:47.167 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 03:40:47.200 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 17.76 seconds (process running for 18.597)
2025-06-17 03:40:47.332 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 03:40:52.175 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 03:40:52.176 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 03:40:52.180 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-06-17 03:40:52.954 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 03:40:53.245 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 03:40:53.339 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 03:40:53.515 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 03:40:53.520 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 03:40:53.537 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 03:42:24.956 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 03:42:25.012 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 03:42:25.026 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 03:47:04.890 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 03:47:05.076 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 03:47:05.101 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 03:48:42.257 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 03:48:42.325 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 03:48:42.354 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 03:50:16.077 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 03:50:16.092 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 03:50:16.242 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 03:52:17.330 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 03:52:17.415 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 03:52:17.498 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 03:55:07.027 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 03:55:07.133 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 03:55:07.149 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 03:58:21.001 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 03:58:21.104 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 03:58:21.121 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:00:02.452 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:00:02.466 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 04:00:02.479 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 04:00:10.766 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 30397 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 04:00:10.769 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 04:00:10.771 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 04:00:14.296 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:00:14.301 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 04:00:14.698 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 377 ms. Found 5 JPA repository interfaces.
2025-06-17 04:00:14.736 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:00:14.739 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 04:00:14.780 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:00:14.781 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:00:14.781 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:00:14.782 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:00:14.782 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:00:14.783 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2025-06-17 04:00:16.684 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 04:00:16.714 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 04:00:16.714 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 04:00:16.867 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 04:00:16.868 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5799 ms
2025-06-17 04:00:17.814 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 04:00:18.235 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@278cb145
2025-06-17 04:00:18.238 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 04:00:18.306 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 04:00:18.419 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.070s)
2025-06-17 04:00:18.503 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 04:00:18.511 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 04:00:18.743 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 04:00:18.883 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 04:00:18.993 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 04:00:19.857 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 04:00:19.987 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 04:00:22.276 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 04:00:22.375 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:00:23.417 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 04:00:29.279 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 04:00:29.458 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 04:00:30.227 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 04:00:31.656 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 04:00:31.685 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 22.752 seconds (process running for 24.199)
2025-06-17 04:00:31.959 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 04:00:33.525 [http-nio-8081-exec-2] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 04:00:33.527 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 04:00:33.531 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-06-17 04:00:33.693 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:00:33.856 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:00:33.873 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:02:11.648 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:02:11.657 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 04:02:11.665 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 04:02:17.841 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 30480 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 04:02:17.844 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 04:02:17.846 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 04:02:19.625 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:02:19.627 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 04:02:19.871 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 232 ms. Found 5 JPA repository interfaces.
2025-06-17 04:02:19.905 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:02:19.907 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 04:02:19.934 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:02:19.934 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:02:19.935 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:02:19.935 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:02:19.935 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:02:19.936 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-06-17 04:02:21.176 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 04:02:21.196 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 04:02:21.196 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 04:02:21.283 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 04:02:21.284 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3348 ms
2025-06-17 04:02:21.944 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 04:02:22.212 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@df6f19b
2025-06-17 04:02:22.214 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 04:02:22.255 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 04:02:22.318 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.037s)
2025-06-17 04:02:22.393 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 04:02:22.399 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 04:02:22.586 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 04:02:22.669 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 04:02:22.717 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 04:02:23.124 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 04:02:23.195 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 04:02:24.724 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 04:02:24.787 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:02:25.376 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 04:02:28.088 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 04:02:28.225 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 04:02:28.870 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 04:02:29.995 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 04:02:30.016 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 13.22 seconds (process running for 13.968)
2025-06-17 04:02:30.111 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 04:04:25.277 [http-nio-8081-exec-2] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 04:04:25.278 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 04:04:25.283 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-06-17 04:04:25.558 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:04:25.934 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:04:25.958 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:04:50.423 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:04:50.439 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:04:50.446 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:04:50.626 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:04:50.629 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:04:50.637 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:06:11.046 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:06:11.176 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:06:11.279 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:06:35.311 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:06:35.320 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 04:06:35.331 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 04:06:40.522 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 30615 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 04:06:40.524 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 04:06:40.525 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 04:06:42.427 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:06:42.429 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 04:06:42.677 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 234 ms. Found 5 JPA repository interfaces.
2025-06-17 04:06:42.704 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:06:42.705 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 04:06:42.732 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:06:42.733 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:06:42.733 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:06:42.734 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:06:42.734 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:06:42.734 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-06-17 04:06:44.346 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 04:06:44.369 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 04:06:44.370 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 04:06:44.474 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 04:06:44.475 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3868 ms
2025-06-17 04:06:45.247 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 04:06:45.600 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@278cb145
2025-06-17 04:06:45.602 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 04:06:45.685 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 04:06:45.823 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.093s)
2025-06-17 04:06:45.844 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 04:06:45.847 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 04:06:46.088 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 04:06:46.189 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 04:06:46.241 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 04:06:46.703 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 04:06:46.781 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 04:06:48.621 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 04:06:48.714 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:06:49.414 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 04:06:52.521 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 04:06:52.660 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 04:06:53.321 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 04:06:54.634 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 04:06:54.658 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 15.135 seconds (process running for 15.812)
2025-06-17 04:06:54.928 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 04:07:11.710 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 04:07:11.711 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 04:07:11.715 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-06-17 04:07:13.040 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:07:13.277 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:07:13.302 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:07:13.346 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Found ticket ID: 9, photoPath: 20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 04:07:13.457 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:07:13.461 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:07:13.463 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:07:13.466 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Found ticket ID: 9, photoPath: 20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 04:09:30.681 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:09:30.698 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 04:09:30.708 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 04:09:36.847 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 30708 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 04:09:36.858 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 04:09:36.859 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 04:09:38.646 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:09:38.649 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 04:09:38.907 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 246 ms. Found 5 JPA repository interfaces.
2025-06-17 04:09:38.933 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:09:38.935 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 04:09:38.964 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:09:38.965 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:09:38.966 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:09:38.966 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:09:38.967 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:09:38.967 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-06-17 04:09:40.339 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 04:09:40.358 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 04:09:40.359 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 04:09:40.459 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 04:09:40.459 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3516 ms
2025-06-17 04:09:41.118 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 04:09:41.380 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@50e8ed74
2025-06-17 04:09:41.382 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 04:09:41.424 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 04:09:41.488 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.038s)
2025-06-17 04:09:41.545 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 04:09:41.548 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 04:09:41.712 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 04:09:41.787 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 04:09:41.837 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 04:09:42.251 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 04:09:42.320 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 04:09:43.864 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 04:09:43.915 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:09:44.515 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 04:09:47.227 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 04:09:47.363 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 04:09:48.038 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 04:09:49.259 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 04:09:49.282 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 13.491 seconds (process running for 14.16)
2025-06-17 04:09:49.514 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 04:09:55.999 [http-nio-8081-exec-2] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 04:09:55.999 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 04:09:56.009 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2025-06-17 04:09:56.183 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:09:56.393 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:09:56.411 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:09:56.442 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Found ticket ID: 9, photoPath: 20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 04:10:43.756 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:10:43.788 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 04:10:43.802 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 04:10:48.762 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 30754 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 04:10:48.764 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 04:10:48.766 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 04:10:50.372 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:10:50.374 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 04:10:50.588 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 202 ms. Found 5 JPA repository interfaces.
2025-06-17 04:10:50.612 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:10:50.613 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 04:10:50.636 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:10:50.637 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:10:50.637 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:10:50.637 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:10:50.638 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:10:50.638 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-06-17 04:10:51.845 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 04:10:51.864 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 04:10:51.864 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 04:10:51.958 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 04:10:51.958 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3108 ms
2025-06-17 04:10:52.500 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 04:10:52.741 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a3bc0da
2025-06-17 04:10:52.743 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 04:10:52.785 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 04:10:52.841 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.032s)
2025-06-17 04:10:52.914 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 04:10:52.918 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 04:10:53.068 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 04:10:53.147 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 04:10:53.194 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 04:10:53.605 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 04:10:53.682 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 04:10:55.194 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 04:10:55.257 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:10:55.734 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 04:10:58.392 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 04:10:58.524 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 04:10:59.108 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 04:11:00.273 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 04:11:00.297 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 12.506 seconds (process running for 13.119)
2025-06-17 04:11:00.442 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 04:11:11.479 [http-nio-8081-exec-2] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 04:11:11.483 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 04:11:11.489 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2025-06-17 04:11:11.774 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:11:12.016 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:11:12.042 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:12:28.819 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:12:28.825 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 04:12:28.831 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 04:12:35.014 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 30810 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 04:12:35.017 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 04:12:35.019 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 04:12:36.789 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:12:36.793 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 04:12:37.139 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 307 ms. Found 5 JPA repository interfaces.
2025-06-17 04:12:37.163 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:12:37.165 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 04:12:37.190 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:12:37.191 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:12:37.191 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:12:37.192 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:12:37.192 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:12:37.192 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-06-17 04:12:38.513 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 04:12:38.533 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 04:12:38.534 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 04:12:38.743 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 04:12:38.744 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3652 ms
2025-06-17 04:12:39.532 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 04:12:39.781 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@103478b8
2025-06-17 04:12:39.784 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 04:12:39.830 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 04:12:39.908 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.042s)
2025-06-17 04:12:39.975 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 04:12:39.979 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 04:12:40.149 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 04:12:40.236 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 04:12:40.286 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 04:12:40.727 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 04:12:40.800 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 04:12:42.402 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 04:12:42.460 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:12:43.095 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 04:12:46.043 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 04:12:46.183 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 04:12:46.922 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 04:12:48.203 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 04:12:48.230 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 14.222 seconds (process running for 14.841)
2025-06-17 04:12:48.515 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 04:12:54.465 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 04:12:54.466 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 04:12:54.469 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-06-17 04:12:54.645 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:12:54.819 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:12:54.838 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:12:55.294 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 04:12:55.296 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:12:55.298 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:12:55.300 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 9, photoPath: 20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 04:12:55.302 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: 20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg, photoUrl: http://localhost:8081/api/parking/photos/20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 04:13:22.673 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource parking/photos/20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:586)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-17 04:15:52.967 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:15:53.004 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:15:53.021 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:17:29.536 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:17:29.543 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:17:29.587 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:21:33.687 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:21:33.704 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 04:21:33.714 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 04:21:39.399 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 31119 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 04:21:39.401 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 04:21:39.402 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 04:21:41.568 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:21:41.571 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 04:21:41.928 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 343 ms. Found 5 JPA repository interfaces.
2025-06-17 04:21:41.961 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:21:41.963 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 04:21:41.997 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:21:41.998 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:21:41.999 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:21:41.999 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:21:42.000 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:21:42.001 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2025-06-17 04:21:43.706 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 04:21:43.729 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 04:21:43.730 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 04:21:43.852 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 04:21:43.852 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4377 ms
2025-06-17 04:21:44.618 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 04:21:44.990 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70421a08
2025-06-17 04:21:44.993 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 04:21:45.043 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 04:21:45.119 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.045s)
2025-06-17 04:21:45.181 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 04:21:45.185 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 04:21:45.374 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 04:21:45.480 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 04:21:45.547 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 04:21:46.154 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 04:21:46.252 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 04:21:48.141 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 04:21:48.218 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:21:48.926 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 04:21:51.949 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 04:21:52.150 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 04:21:52.826 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 04:21:54.060 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 04:21:54.102 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 15.842 seconds (process running for 16.509)
2025-06-17 04:21:54.166 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:21:54.177 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 04:21:54.187 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 04:21:57.348 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 31138 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 04:21:57.358 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 04:21:57.360 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 04:21:59.209 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:21:59.212 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 04:21:59.449 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 227 ms. Found 5 JPA repository interfaces.
2025-06-17 04:21:59.473 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:21:59.475 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 04:21:59.497 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:21:59.498 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:21:59.498 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:21:59.498 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:21:59.499 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:21:59.499 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-06-17 04:22:00.767 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 04:22:00.800 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 04:22:00.800 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 04:22:00.897 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 04:22:00.898 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3464 ms
2025-06-17 04:22:01.501 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 04:22:01.757 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a3bc0da
2025-06-17 04:22:01.759 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 04:22:01.807 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 04:22:01.877 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.043s)
2025-06-17 04:22:01.921 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 04:22:01.925 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 04:22:02.110 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 04:22:02.203 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 04:22:02.262 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 04:22:02.746 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 04:22:02.817 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 04:22:04.296 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 04:22:04.341 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:22:04.833 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 04:22:07.031 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 04:22:07.155 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 04:22:07.689 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 04:22:08.711 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 04:22:08.737 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 12.537 seconds (process running for 13.481)
2025-06-17 04:22:08.975 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 04:22:13.610 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 04:22:13.611 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 04:22:13.617 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-06-17 04:22:13.702 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource parking/photos/20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:586)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-17 04:22:20.091 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:22:20.277 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:22:20.298 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:22:20.803 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 04:22:20.805 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:22:20.807 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:22:20.810 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 9, photoPath: 20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 04:22:20.811 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: 20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg, photoUrl: http://localhost:8081/api/parking/photos/20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 04:22:45.290 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource parking/photos/20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:586)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-17 04:22:53.238 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource parking/photos/20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:586)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-17 04:26:07.574 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:26:07.593 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 04:26:07.609 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 04:26:13.402 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 31266 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 04:26:13.405 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 04:26:13.407 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 04:26:15.389 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:26:15.392 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 04:26:15.649 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 244 ms. Found 5 JPA repository interfaces.
2025-06-17 04:26:15.678 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:26:15.680 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 04:26:15.706 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:26:15.707 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:26:15.707 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:26:15.708 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:26:15.708 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:26:15.709 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-06-17 04:26:17.059 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 04:26:17.078 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 04:26:17.079 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 04:26:17.194 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 04:26:17.194 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3688 ms
2025-06-17 04:26:18.309 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 04:26:18.581 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@215a0264
2025-06-17 04:26:18.583 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 04:26:18.628 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 04:26:18.691 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.038s)
2025-06-17 04:26:18.802 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 04:26:18.807 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 04:26:18.991 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 04:26:19.093 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 04:26:19.152 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 04:26:19.908 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 04:26:19.998 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 04:26:21.837 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 04:26:21.907 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:26:22.505 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 04:26:25.473 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 04:26:25.612 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 04:26:26.265 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 04:26:27.418 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 04:26:27.440 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 15.113 seconds (process running for 15.881)
2025-06-17 04:26:27.739 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 04:26:38.245 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:26:38.254 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 04:26:38.262 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 04:26:52.165 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 31295 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 04:26:52.167 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 04:26:52.169 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 04:26:54.026 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:26:54.029 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 04:26:54.273 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 231 ms. Found 5 JPA repository interfaces.
2025-06-17 04:26:54.299 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 04:26:54.300 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 04:26:54.325 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:26:54.326 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:26:54.326 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:26:54.327 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:26:54.327 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 04:26:54.328 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-06-17 04:26:55.589 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 04:26:55.608 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 04:26:55.608 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 04:26:55.696 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 04:26:55.697 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3438 ms
2025-06-17 04:26:56.351 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 04:26:56.597 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2d2f09a4
2025-06-17 04:26:56.599 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 04:26:56.642 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 04:26:56.706 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.042s)
2025-06-17 04:26:56.774 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 04:26:56.777 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 04:26:56.945 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 04:26:57.022 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 04:26:57.067 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 04:26:57.473 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 04:26:57.538 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 04:26:58.966 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 04:26:59.008 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 04:26:59.492 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 04:27:01.522 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 04:27:01.656 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 04:27:02.376 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 04:27:03.437 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 04:27:03.461 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 12.396 seconds (process running for 13.133)
2025-06-17 04:27:03.565 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 04:27:16.509 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 04:27:16.510 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 04:27:16.515 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-06-17 04:27:16.608 [http-nio-8081-exec-1] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo by path: ./uploads/20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 04:32:29.184 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:32:29.432 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:32:29.462 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:32:29.922 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 04:32:29.925 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:32:29.927 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:32:29.929 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 9, photoPath: 20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 04:32:29.931 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: 20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg, photoUrl: http://localhost:8081/api/parking/photos/20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 04:38:18.634 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m21s879ms).
2025-06-17 04:43:44.274 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m25s667ms).
2025-06-17 04:47:57.504 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:47:57.598 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:47:57.623 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:48:04.546 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m50s249ms).
2025-06-17 04:50:20.365 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:50:20.407 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:50:20.436 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:51:26.636 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:51:26.690 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:51:26.700 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:51:49.191 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:51:49.196 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:51:49.200 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:51:49.335 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:51:49.343 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:51:49.346 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:53:14.717 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:53:14.756 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:53:14.767 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:55:54.133 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:55:54.209 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:55:54.239 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:56:56.641 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:56:56.679 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:56:56.685 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:57:47.293 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:57:47.299 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:57:47.301 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:57:47.518 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:57:47.525 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:57:47.530 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 04:58:49.044 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 04:58:49.053 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 04:58:49.060 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:02:32.407 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:02:32.504 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:02:32.540 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:05:02.956 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:05:03.005 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:05:03.012 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:06:07.236 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:06:07.247 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:06:07.288 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:06:18.490 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:06:18.495 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:06:18.502 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:07:44.900 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:07:45.019 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:07:45.030 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:10:12.309 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:10:12.348 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:10:12.370 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:12:21.168 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:12:21.177 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:12:21.180 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:13:27.128 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:13:27.168 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:13:27.195 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:15:02.434 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:15:02.472 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:15:02.483 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:21:52.105 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B1E
2025-06-17 05:21:52.149 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:21:52.395 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B1E
2025-06-17 05:21:53.476 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B1E
2025-06-17 05:21:53.508 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:21:53.513 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B1E
2025-06-17 05:21:55.547 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B1E
2025-06-17 05:21:55.561 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:21:55.564 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B1E
2025-06-17 05:22:07.091 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:22:07.100 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:22:07.111 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:22:10.213 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:22:10.216 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:22:10.218 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:22:11.019 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:22:11.023 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:22:11.026 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:22:11.239 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:22:11.247 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:22:11.262 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:22:11.483 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:22:11.487 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:22:11.490 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:22:11.927 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:22:11.930 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:22:11.932 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:22:12.724 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:22:12.727 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:22:12.730 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:22:13.181 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:22:13.184 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:22:13.185 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:22:13.499 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:22:13.510 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:22:13.512 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:22:13.922 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:22:13.924 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:22:13.926 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:22:17.975 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:22:17.995 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:22:17.997 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:26:00.731 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:26:00.777 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:26:00.787 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:28:19.788 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B1
2025-06-17 05:28:19.838 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:28:19.872 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B1
2025-06-17 05:28:20.910 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B1
2025-06-17 05:28:20.916 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:28:20.921 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B1
2025-06-17 05:28:22.955 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B1
2025-06-17 05:28:22.965 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:28:22.979 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B1
2025-06-17 05:29:37.510 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B1
2025-06-17 05:29:37.655 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:29:37.700 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B1
2025-06-17 05:29:38.764 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B1
2025-06-17 05:29:38.775 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:29:38.781 [http-nio-8081-exec-3] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B1
2025-06-17 05:29:40.823 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B1
2025-06-17 05:29:40.868 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:29:41.070 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B1
2025-06-17 05:29:46.424 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:29:46.456 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:29:46.515 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:29:46.943 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:29:46.969 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:29:47.017 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:29:55.752 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:29:55.760 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:29:55.765 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:29:56.262 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:29:56.269 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:29:56.284 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:30:03.273 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:30:03.282 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:30:03.300 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:30:53.686 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:30:53.882 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:30:53.895 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:31:29.246 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:31:29.259 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:31:29.264 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:31:43.517 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:31:43.521 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:31:43.740 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:32:01.418 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:32:01.511 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:32:01.545 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:33:50.561 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource parking/status.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:586)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-17 05:34:09.627 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2
2025-06-17 05:34:09.671 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:09.688 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2
2025-06-17 05:34:10.743 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2
2025-06-17 05:34:10.751 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:10.758 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2
2025-06-17 05:34:12.904 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2
2025-06-17 05:34:12.909 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:12.914 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2
2025-06-17 05:34:15.707 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2
2025-06-17 05:34:15.712 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:15.716 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2
2025-06-17 05:34:16.803 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2
2025-06-17 05:34:16.809 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:16.814 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2
2025-06-17 05:34:18.847 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2
2025-06-17 05:34:18.851 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:18.859 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2
2025-06-17 05:34:24.580 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: V2
2025-06-17 05:34:24.588 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:24.597 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: V2
2025-06-17 05:34:25.641 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: V2
2025-06-17 05:34:25.651 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:25.657 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: V2
2025-06-17 05:34:29.308 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: V2
2025-06-17 05:34:29.319 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:29.327 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: V2
2025-06-17 05:34:32.765 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: V2
2025-06-17 05:34:32.808 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:32.825 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: V2
2025-06-17 05:34:34.045 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: V2
2025-06-17 05:34:34.051 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:34.067 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: V2
2025-06-17 05:34:36.097 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: V2
2025-06-17 05:34:36.111 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:36.116 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: V2
2025-06-17 05:34:40.791 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:34:40.799 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:40.805 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:34:41.291 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:34:41.336 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:41.353 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:34:54.576 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:34:54.580 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:54.581 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:34:55.084 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:34:55.086 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:34:55.091 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:35:11.302 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:35:11.307 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:35:11.327 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:35:11.800 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:35:11.848 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:35:11.860 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:35:36.895 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:35:36.901 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:35:36.905 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:35:43.272 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:35:43.285 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:35:43.318 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:35:54.317 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:35:54.322 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:35:54.324 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:35:57.334 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:35:57.339 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:35:57.340 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:36:01.454 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:36:01.462 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:36:01.465 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:36:03.236 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:36:03.240 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:36:03.241 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:36:05.029 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:36:05.034 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:36:05.035 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:36:06.296 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:36:06.306 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:36:06.308 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:36:10.487 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:36:10.502 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:36:10.504 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:36:29.543 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:36:29.585 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:36:29.589 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:36:30.439 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:36:30.448 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:36:30.453 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:36:59.937 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:36:59.951 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:36:59.960 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:37:03.163 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:37:03.168 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:37:03.171 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:37:06.014 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:37:06.021 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:37:06.025 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:37:16.865 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:37:16.869 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:37:16.871 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:37:19.990 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:37:19.993 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:37:19.995 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:37:30.607 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:37:30.613 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:37:30.618 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:37:36.844 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:37:36.847 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:37:36.848 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:37:37.662 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:37:37.681 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:37:37.686 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:37:55.681 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:37:55.734 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:37:55.736 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:37:59.242 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:37:59.248 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:37:59.261 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:37:59.595 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:37:59.621 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:37:59.625 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:38:06.109 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:38:06.117 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:38:06.119 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:38:11.022 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:38:11.036 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:38:11.051 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:38:22.975 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:38:23.024 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:38:23.030 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:38:53.616 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:38:53.621 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:38:53.679 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:38:56.286 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:38:56.294 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:38:56.299 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:39:18.373 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:39:18.378 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:39:18.391 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:39:29.337 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:39:29.349 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:39:29.382 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:39:36.928 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:39:36.938 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:39:36.985 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:39:41.178 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:39:41.185 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:39:41.247 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:39:57.288 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:39:57.296 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:39:57.344 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:40:04.481 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:40:04.490 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:40:04.529 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:40:22.020 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:40:22.031 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:40:22.135 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:40:28.436 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:40:28.443 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:40:28.463 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:40:28.787 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:40:28.800 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:40:28.818 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:41:22.037 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:41:22.050 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:41:22.155 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:41:24.543 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:41:24.556 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:41:24.560 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:41:29.065 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:41:29.071 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:41:29.105 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:41:30.832 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:41:30.844 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:41:30.867 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:41:35.585 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:41:35.595 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:41:35.598 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:41:36.038 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:41:36.056 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:41:36.086 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:41:43.872 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:41:43.881 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:41:43.887 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:41:45.447 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:41:45.452 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:41:45.453 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:41:47.305 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:41:47.312 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:41:47.339 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:42:22.432 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:42:22.444 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:42:22.460 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:42:31.766 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:42:31.772 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:42:31.786 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:42:43.844 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:42:43.851 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:42:43.872 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:43:08.288 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:43:08.295 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:43:08.301 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:43:58.005 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:43:58.009 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:43:58.012 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:47:45.585 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:47:45.626 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:47:45.666 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:47:46.099 [http-nio-8081-exec-7] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo by path: ./uploads/20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 05:47:46.142 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:47:46.150 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:47:46.173 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:48:17.304 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:48:17.316 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:48:17.320 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:48:17.807 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:48:17.809 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:48:17.811 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:49:23.721 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:49:23.734 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:49:23.797 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:50:01.552 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:50:01.575 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:50:01.590 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:50:09.147 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:50:09.163 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:50:09.198 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:50:41.520 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:50:41.583 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:50:41.589 [http-nio-8081-exec-5] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo by path: ./uploads/20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 05:50:41.594 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:50:41.973 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:50:41.980 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:50:41.985 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:50:44.060 [http-nio-8081-exec-4] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo by path: ./uploads/20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 05:51:52.072 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:51:52.111 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:51:52.116 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:51:57.373 [http-nio-8081-exec-5] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo by path: ./uploads/20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 05:52:10.405 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:52:10.411 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:52:10.446 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:52:43.565 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:52:43.587 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:52:44.111 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:53:58.991 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:53:59.049 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:53:59.139 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:53:59.524 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:53:59.531 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:53:59.546 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:54:15.822 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:54:15.833 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:54:15.849 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:54:16.317 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:54:16.324 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:54:16.327 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:54:20.238 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:54:20.245 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:54:20.264 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:54:20.741 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:54:20.751 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:54:20.755 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:54:21.402 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:54:21.405 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:54:21.407 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:54:22.184 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:54:22.190 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:54:22.211 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:54:22.671 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:54:22.673 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:54:22.677 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:55:28.019 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B123FRD
2025-06-17 05:55:28.068 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:55:28.073 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:55:28.097 [http-nio-8081-exec-4] DEBUG com.parkee.parkingpos.util.FileUploadUtil - Created directory: ./uploads/checkout/2025/06/17
2025-06-17 05:55:28.326 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750114528083_47433911.jpg
2025-06-17 05:55:28.327 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:55:28.455 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        parking_tickets 
    set
        check_in_gate=?,
        check_in_operator=?,
        check_in_photo_path=?,
        check_in_time=?,
        check_out_gate=?,
        check_out_operator=?,
        check_out_photo_path=?,
        check_out_time=?,
        member_id=?,
        member_name=?,
        parking_fee=?,
        plate_number=?,
        status=?,
        updated_at=?,
        vehicle_type=? 
    where
        id=?
2025-06-17 05:55:28.633 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:55:28.644 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 05:55:57.020 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:55:57.064 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:55:57.089 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:56:33.935 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:56:33.991 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:56:34.046 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:56:43.482 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:56:43.489 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:56:43.493 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:56:44.326 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:56:44.356 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:56:44.365 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:57:40.719 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:57:40.831 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:57:40.856 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:57:46.784 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:57:46.806 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:57:46.886 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:57:50.249 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:57:50.264 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:57:50.271 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:57:58.087 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:57:58.101 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:57:58.120 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:58:14.840 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:58:14.850 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:58:14.856 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:58:17.083 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B123FRD
2025-06-17 05:58:17.093 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:58:17.134 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:58:17.174 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750114697154_2ecbf25c.jpg
2025-06-17 05:58:17.177 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:58:17.204 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        parking_tickets 
    set
        check_in_gate=?,
        check_in_operator=?,
        check_in_photo_path=?,
        check_in_time=?,
        check_out_gate=?,
        check_out_operator=?,
        check_out_photo_path=?,
        check_out_time=?,
        member_id=?,
        member_name=?,
        parking_fee=?,
        plate_number=?,
        status=?,
        updated_at=?,
        vehicle_type=? 
    where
        id=?
2025-06-17 05:58:17.236 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:58:17.241 [http-nio-8081-exec-3] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 05:58:34.290 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:58:34.295 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:58:34.325 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:58:39.928 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:58:39.936 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:58:39.939 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 05:59:11.794 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 05:59:11.800 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 05:59:11.967 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:02:46.354 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 06:02:46.418 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 06:02:46.447 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:03:03.005 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 06:03:03.015 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 06:03:03.020 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:03:06.836 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Get dashboard statistics dari 2025-06-01 sampai 2025-06-30
2025-06-17 06:03:06.897 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:06.966 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 06:03:07.003 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(pt1_0.id) 
    from
        parking_tickets pt1_0 
    where
        pt1_0.status=?
2025-06-17 06:03:07.118 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.140 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.160 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.payment_method,
        count(p1_0.id),
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.payment_time between ? and ? 
        and p1_0.status='SUCCESS' 
    group by
        p1_0.payment_method
2025-06-17 06:03:07.184 [http-nio-8081-exec-9] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-06-17 06:03:07.188 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.191 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.209 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.217 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.256 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.273 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.312 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.322 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.330 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.334 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.343 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.348 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.355 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.357 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.363 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.368 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.374 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.378 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.384 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.399 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.409 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.415 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.420 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.425 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.429 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.433 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.437 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.439 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:03:07.450 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:03:07.490 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:03:07.493 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:03:07.498 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:03:07.501 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.509 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.515 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:03:07.521 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:03:07.524 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:03:07.534 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.539 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.544 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:03:07.551 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.555 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.562 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.568 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.572 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.580 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.586 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.592 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.596 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.601 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.604 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.611 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.616 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.631 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.640 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.652 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.656 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.662 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.670 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.677 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.681 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.689 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.716 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.732 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.736 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.741 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.743 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.747 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:03:07.751 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:03:07.779 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 06:03:07.858 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.id) 
    from
        members m1_0 
    where
        m1_0.active
2025-06-17 06:03:07.929 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:03:07.962 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:03:07.966 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:03:07.973 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:03:07.980 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:03:41.569 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 06:03:41.587 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 06:03:41.600 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 06:04:44.466 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 35762 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 06:04:44.469 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 06:04:44.470 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 06:04:47.163 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 06:04:47.167 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 06:04:47.550 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 369 ms. Found 5 JPA repository interfaces.
2025-06-17 06:04:47.586 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 06:04:47.588 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 06:04:47.648 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 06:04:47.649 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 06:04:47.649 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 06:04:47.650 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 06:04:47.650 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 06:04:47.651 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 0 Redis repository interfaces.
2025-06-17 06:04:49.654 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 06:04:49.675 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 06:04:49.676 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 06:04:49.787 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 06:04:49.788 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5210 ms
2025-06-17 06:04:50.713 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 06:04:51.031 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@56b704ea
2025-06-17 06:04:51.034 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 06:04:51.085 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 06:04:51.169 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.052s)
2025-06-17 06:04:51.310 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 06:04:51.323 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 06:04:51.852 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 06:04:52.122 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 06:04:52.322 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 06:04:53.221 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 06:04:53.370 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 06:04:55.711 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 06:04:55.984 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 06:04:56.834 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 06:05:00.074 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 06:05:00.229 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 06:05:00.873 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 06:05:02.001 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 06:05:02.026 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 19.156 seconds (process running for 20.109)
2025-06-17 06:05:02.353 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 06:05:54.855 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 06:05:54.961 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 06:05:55.041 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 76 ms
2025-06-17 06:05:56.756 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 06:05:57.022 [http-nio-8081-exec-1] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-06-17 06:05:57.888 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Get dashboard statistics dari 2025-06-01 sampai 2025-06-30
2025-06-17 06:05:57.932 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:57.948 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(pt1_0.id) 
    from
        parking_tickets pt1_0 
    where
        pt1_0.status=?
2025-06-17 06:05:57.988 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:57.996 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.005 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.payment_method,
        count(p1_0.id),
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.payment_time between ? and ? 
        and p1_0.status='SUCCESS' 
    group by
        p1_0.payment_method
2025-06-17 06:05:58.014 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.018 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.026 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.029 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.035 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.038 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.046 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.051 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.056 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.060 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.067 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.070 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.076 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.079 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.085 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.089 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.095 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.099 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.107 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.111 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.119 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.124 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.136 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.146 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.158 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.267 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.277 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.388 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:05:58.417 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:05:58.443 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:05:58.446 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:05:58.451 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:05:58.456 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.462 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.465 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:05:58.468 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:05:58.471 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:05:58.474 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.479 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.482 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:05:58.486 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.492 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.496 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.505 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.516 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.528 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.536 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.559 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.578 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.595 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.613 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.621 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.627 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.635 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.639 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.646 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.651 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.661 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.666 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.673 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.677 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.695 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.700 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.709 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.713 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.718 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.722 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.727 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 06:05:58.731 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 06:05:58.744 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 06:05:58.784 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.id) 
    from
        members m1_0 
    where
        m1_0.active
2025-06-17 06:05:58.944 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:05:58.967 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:05:58.973 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:05:58.982 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:05:58.989 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:06:22.636 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 06:06:22.647 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 06:06:22.655 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:06:22.662 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 9, photoPath: 20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 06:06:22.667 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: 20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg, photoUrl: http://localhost:8081/api/parking/photos/20250616/checkin/b15c8db2-0080-49af-adb6-f64b899f0edd.jpg
2025-06-17 06:06:22.825 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 06:06:22.827 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 06:06:22.831 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:06:23.320 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 06:06:23.323 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 06:06:23.325 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:06:26.793 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 06:06:26.798 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 06:06:26.805 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:06:51.375 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B123FRD
2025-06-17 06:06:51.378 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 06:06:51.381 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:06:51.384 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 06:06:51.389 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 06:06:51.467 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750115211390_1e3c3543.jpg
2025-06-17 06:06:51.521 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        payments
        (amount, created_at, parking_ticket_id, payment_method, payment_time, reference_number, status) 
    values
        (?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 06:06:51.568 [http-nio-8081-exec-8] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Generate invoice untuk ticket ID: 9
2025-06-17 06:06:51.578 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        ir1_0.id,
        ir1_0.base_amount,
        ir1_0.check_in_time,
        ir1_0.check_out_time,
        ir1_0.created_at,
        ir1_0.discount_amount,
        ir1_0.duration_minutes,
        ir1_0.invoice_date,
        ir1_0.invoice_number,
        ir1_0.member_name,
        ir1_0.operator_name,
        ir1_0.parking_ticket_id,
        ir1_0.payment_method,
        ir1_0.payment_reference,
        ir1_0.plate_number,
        ir1_0.status,
        ir1_0.total_amount,
        ir1_0.voucher_code 
    from
        invoice_receipts ir1_0 
    where
        ir1_0.invoice_date between ? and ?
2025-06-17 06:06:51.593 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_receipts
        (base_amount, check_in_time, check_out_time, created_at, discount_amount, duration_minutes, invoice_date, invoice_number, member_name, operator_name, parking_ticket_id, payment_method, payment_reference, plate_number, status, total_amount, voucher_code) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 06:06:51.600 [http-nio-8081-exec-8] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Invoice INV-202506170001 berhasil dibuat
2025-06-17 06:06:51.630 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Check-out berhasil dengan invoice: INV-202506170001
2025-06-17 06:06:51.647 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        parking_tickets 
    set
        check_in_gate=?,
        check_in_operator=?,
        check_in_photo_path=?,
        check_in_time=?,
        check_out_gate=?,
        check_out_operator=?,
        check_out_photo_path=?,
        check_out_time=?,
        member_id=?,
        member_name=?,
        parking_fee=?,
        plate_number=?,
        status=?,
        updated_at=?,
        vehicle_type=? 
    where
        id=?
2025-06-17 06:07:15.640 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 06:07:15.658 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 06:07:15.682 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 06:07:16.717 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 06:07:16.720 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 06:07:16.722 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 06:07:18.750 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 06:07:18.753 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 06:07:18.756 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 06:07:42.041 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 06:07:42.080 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:07:42.101 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:07:42.107 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:07:42.112 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:07:42.115 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:07:42.125 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 06:07:42.127 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 06:07:56.583 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 06:07:59.088 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 06:08:01.288 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 06:08:02.914 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 06:08:26.969 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 06:08:28.011 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 06:08:30.047 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 06:08:44.078 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 06:23:07.744 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m16s498ms).
2025-06-17 06:23:21.463 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 06:39:30.382 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m22s548ms).
2025-06-17 06:45:25.734 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m25s342ms).
2025-06-17 06:50:50.282 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m24s549ms).
2025-06-17 06:56:43.830 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m23s537ms).
2025-06-17 07:01:32.731 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 07:01:42.784 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m28s948ms).
2025-06-17 07:17:41.559 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m28s755ms).
2025-06-17 07:33:10.446 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m28s887ms).
2025-06-17 08:10:53.563 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=37m43s116ms).
2025-06-17 08:32:30.996 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 08:32:31.001 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=21m7s240ms).
2025-06-17 08:32:43.427 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 08:32:44.750 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 08:32:46.786 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 08:32:50.895 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 08:32:55.621 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 08:32:56.664 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 08:32:58.720 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 08:33:03.196 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 08:33:48.896 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 08:35:12.483 [http-nio-8081-exec-3] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 08:35:15.720 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 08:35:34.997 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.MemberService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllMembers(ParkingController.java:494)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 08:37:51.176 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 08:37:51.248 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 08:37:51.282 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 08:38:04.954 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 36812 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 08:38:04.957 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 08:38:04.958 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 08:38:06.777 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 08:38:06.780 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 08:38:06.993 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 203 ms. Found 5 JPA repository interfaces.
2025-06-17 08:38:07.021 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 08:38:07.023 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 08:38:07.046 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 08:38:07.046 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 08:38:07.047 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 08:38:07.047 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 08:38:07.047 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 08:38:07.048 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-06-17 08:38:08.128 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 08:38:08.157 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 08:38:08.157 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 08:38:08.245 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 08:38:08.245 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3166 ms
2025-06-17 08:38:08.802 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 08:38:09.052 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@215a0264
2025-06-17 08:38:09.054 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 08:38:09.098 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 08:38:09.184 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.055s)
2025-06-17 08:38:09.249 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 08:38:09.255 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 08:38:09.440 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 08:38:09.550 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 08:38:09.617 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 08:38:10.105 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 08:38:10.198 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 08:38:11.745 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 08:38:11.805 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 08:38:12.360 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 08:38:14.587 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 08:38:14.712 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 08:38:15.254 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 08:38:16.228 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 08:38:16.249 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 12.32 seconds (process running for 13.234)
2025-06-17 08:38:16.483 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 08:38:19.963 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 08:38:19.966 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 08:38:19.975 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2025-06-17 08:38:20.327 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:38:20.430 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:38:20.439 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:38:20.444 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:38:20.447 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:38:20.452 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:38:20.464 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:38:20.466 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:38:20.507 [http-nio-8081-exec-1] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-06-17 08:38:31.858 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:38:31.938 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:38:32.005 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:38:32.019 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:38:32.043 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:38:32.049 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:38:32.122 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:38:32.138 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:39:42.895 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:39:42.928 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:39:42.934 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:39:42.939 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:39:42.944 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:39:42.958 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:39:42.967 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:39:42.971 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:43:08.860 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:43:09.028 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:43:09.035 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:43:09.040 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:43:09.046 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:43:09.054 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:43:09.064 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:43:09.066 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:44:29.261 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 08:44:29.286 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 08:44:29.307 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 08:44:33.874 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 37150 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 08:44:33.876 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 08:44:33.877 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 08:44:36.411 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 08:44:36.417 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 08:44:36.878 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 431 ms. Found 5 JPA repository interfaces.
2025-06-17 08:44:36.920 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 08:44:36.923 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 08:44:36.968 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 08:44:36.969 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 08:44:36.970 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 08:44:36.971 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 08:44:36.972 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 08:44:36.972 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 0 Redis repository interfaces.
2025-06-17 08:44:38.333 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 08:44:38.353 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 08:44:38.353 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 08:44:38.491 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 08:44:38.491 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4515 ms
2025-06-17 08:44:39.522 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 08:44:39.842 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2d2f09a4
2025-06-17 08:44:39.844 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 08:44:39.894 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 08:44:40.040 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.114s)
2025-06-17 08:44:40.125 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 08:44:40.132 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 08:44:40.377 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 08:44:40.538 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 08:44:40.625 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 08:44:41.376 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 08:44:41.481 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 08:44:44.161 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 08:44:44.250 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 08:44:44.892 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 08:44:54.015 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 08:44:54.728 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 08:44:56.127 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 08:44:59.188 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 08:44:59.221 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 26.659 seconds (process running for 28.107)
2025-06-17 08:44:59.473 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 08:45:06.178 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 08:45:06.180 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 08:45:06.187 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2025-06-17 08:45:06.756 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 08:45:07.009 [http-nio-8081-exec-2] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-06-17 08:45:11.903 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:45:11.996 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:45:12.008 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:45:12.015 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:45:12.031 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:45:12.045 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:45:12.065 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:45:12.072 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:45:27.997 [http-nio-8081-exec-1] INFO  org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 1001 ms
2025-06-17 08:47:14.170 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:47:14.224 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:47:14.230 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:47:14.237 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:47:14.242 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:47:14.247 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:47:14.280 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:47:14.283 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:48:32.245 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:48:32.270 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:48:32.279 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:48:32.286 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:48:32.294 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:48:32.297 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:48:32.311 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:48:32.315 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:48:34.639 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 08:48:34.662 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 08:48:36.866 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 08:49:49.367 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:49:49.520 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:49:49.844 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:49:49.851 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:49:49.863 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:49:49.869 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:49:49.905 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:49:49.949 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:50:05.246 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:50:05.291 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:50:05.313 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:50:05.345 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:50:05.352 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:50:05.358 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:50:05.373 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:50:05.378 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:50:28.870 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:50:28.882 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:50:28.888 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:50:28.895 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:50:28.902 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:50:28.910 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:50:28.918 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:50:28.920 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:54:25.472 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:54:25.619 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:54:25.793 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:54:25.802 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:54:25.903 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:54:25.916 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:54:25.972 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:54:25.974 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:54:54.839 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active=true 
        and (
            lower(m1_0.name) like lower(('%'||?||'%')) escape '' 
            or lower(m1_0.vehicle_plate_number) like lower(('%'||?||'%')) escape ''
        ) 
    fetch
        first ? rows only
2025-06-17 08:54:54.866 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:54:54.873 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:54:54.880 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:54:54.885 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:54:54.899 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:54:54.918 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:54:54.921 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:54:55.142 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active=true 
        and (
            lower(m1_0.name) like lower(('%'||?||'%')) escape '' 
            or lower(m1_0.vehicle_plate_number) like lower(('%'||?||'%')) escape ''
        ) 
    fetch
        first ? rows only
2025-06-17 08:54:55.158 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:54:55.176 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:54:55.186 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:54:55.363 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active=true 
        and (
            lower(m1_0.name) like lower(('%'||?||'%')) escape '' 
            or lower(m1_0.vehicle_plate_number) like lower(('%'||?||'%')) escape ''
        ) 
    fetch
        first ? rows only
2025-06-17 08:54:55.388 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:56:08.411 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active=true 
        and (
            lower(m1_0.name) like lower(('%'||?||'%')) escape '' 
            or lower(m1_0.vehicle_plate_number) like lower(('%'||?||'%')) escape ''
        ) 
    fetch
        first ? rows only
2025-06-17 08:56:08.572 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:56:31.657 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:56:31.668 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:56:31.673 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:56:31.689 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:56:31.693 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:56:31.694 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:56:31.700 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:56:31.701 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:56:58.814 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:56:58.862 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:56:58.885 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:56:58.918 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:56:58.923 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:56:58.926 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:56:58.933 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:56:58.936 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:57:01.568 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:57:01.585 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:01.589 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:01.593 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:01.597 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:01.602 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:57:01.629 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:01.631 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:57:03.999 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:57:04.007 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:04.015 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:04.020 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:04.025 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:04.026 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:57:04.033 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:04.035 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:57:52.989 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:57:53.031 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:53.042 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:53.055 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:53.060 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:53.073 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:57:53.082 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:57:53.084 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:58:12.669 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:58:12.683 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:58:12.691 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:58:12.710 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:58:12.719 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:58:12.723 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:58:12.729 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:58:12.766 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:59:22.222 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 08:59:22.421 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:59:22.434 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:59:22.444 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:59:22.475 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:59:22.504 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 08:59:22.666 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 08:59:22.743 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:00:40.251 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 09:00:40.359 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 09:00:40.372 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 09:00:40.387 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 09:00:40.401 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 09:00:40.407 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:00:40.423 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 09:00:40.426 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:03:34.934 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 09:03:35.119 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 09:03:35.274 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 09:03:35.292 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 09:03:35.336 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 09:03:35.339 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:03:35.362 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 09:03:35.366 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:05:04.795 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 09:05:04.924 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:05:04.995 [http-nio-8081-exec-6] DEBUG com.parkee.parkingpos.util.FileUploadUtil - Created directory: ./uploads/checkin/2025/06/17
2025-06-17 09:05:05.263 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750125904984_c295909e.jpg
2025-06-17 09:05:05.271 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 09:05:05.390 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 09:05:05.554 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 10
2025-06-17 09:05:05.555 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 10, photoPath: checkin/2025/06/17/checkin_1750125904984_c295909e.jpg
2025-06-17 09:05:05.559 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750125904984_c295909e.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750125904984_c295909e.jpg
2025-06-17 09:09:39.295 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 09:09:39.544 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 09:09:51.767 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B22FRD
2025-06-17 09:09:51.815 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:09:51.838 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750126191828_2ca47d55.jpg
2025-06-17 09:09:51.845 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 09:09:51.858 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 09:09:51.896 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 11
2025-06-17 09:09:51.897 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 11, photoPath: checkin/2025/06/17/checkin_1750126191828_2ca47d55.jpg
2025-06-17 09:09:51.897 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750126191828_2ca47d55.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750126191828_2ca47d55.jpg
2025-06-17 09:11:02.273 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 09:11:02.342 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:11:02.372 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:11:02.443 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 10, photoPath: checkin/2025/06/17/checkin_1750125904984_c295909e.jpg
2025-06-17 09:11:02.443 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750125904984_c295909e.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750125904984_c295909e.jpg
2025-06-17 09:11:02.816 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 09:11:02.820 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:11:02.826 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:11:03.034 [http-nio-8081-exec-4] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo: ./uploads/checkin/2025/06/17/checkin_1750125904984_c295909e.jpg
2025-06-17 09:11:03.068 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.controller.PhotoController - Successfully serving photo: ./uploads/checkin/2025/06/17/checkin_1750125904984_c295909e.jpg
2025-06-17 09:11:03.353 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 09:11:03.363 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:11:03.378 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:11:19.789 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 09:11:19.796 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:11:19.818 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:11:24.392 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.VoucherService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllVouchers(ParkingController.java:787)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 09:11:25.690 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.VoucherService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllVouchers(ParkingController.java:787)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 09:11:27.744 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.VoucherService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllVouchers(ParkingController.java:787)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 09:11:31.803 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.VoucherService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllVouchers(ParkingController.java:787)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 09:11:38.401 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 09:11:38.449 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:11:38.459 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:11:42.329 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 09:11:42.338 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:11:42.415 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:11:43.526 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 09:11:43.533 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:11:43.549 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:11:44.479 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 09:11:44.491 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:11:44.527 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:11:44.917 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 09:11:44.923 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:11:44.959 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:11:45.527 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 09:11:45.532 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:11:45.537 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:11:46.061 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 09:11:46.070 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:11:46.075 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:11:46.564 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 09:11:46.572 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 09:11:46.576 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 09:11:47.572 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.VoucherService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllVouchers(ParkingController.java:787)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 09:11:48.645 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.VoucherService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllVouchers(ParkingController.java:787)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 09:11:50.715 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.VoucherService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllVouchers(ParkingController.java:787)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 09:12:04.797 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 09:12:04.848 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 09:12:04.878 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 09:12:58.537 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 38952 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 09:12:58.540 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 09:12:58.541 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 09:13:00.994 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 09:13:00.998 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 09:13:01.367 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 352 ms. Found 5 JPA repository interfaces.
2025-06-17 09:13:01.399 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 09:13:01.402 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 09:13:01.432 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 09:13:01.433 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 09:13:01.434 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 09:13:01.434 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 09:13:01.435 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 09:13:01.436 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-06-17 09:13:03.141 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 09:13:03.170 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 09:13:03.171 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 09:13:03.428 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 09:13:03.428 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4747 ms
2025-06-17 09:13:04.239 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 09:13:04.660 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1b36d248
2025-06-17 09:13:04.663 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 09:13:04.729 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 09:13:04.839 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.069s)
2025-06-17 09:13:04.864 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 09:13:04.871 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 09:13:05.082 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 09:13:05.198 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 09:13:05.255 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 09:13:05.777 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 09:13:05.871 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 09:13:07.664 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 09:13:08.890 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 09:13:09.842 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 09:13:14.699 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 09:13:14.903 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 09:13:16.228 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 09:13:17.887 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 09:13:17.916 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 20.759 seconds (process running for 21.833)
2025-06-17 09:13:18.146 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 09:13:42.366 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 09:13:42.368 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 09:13:42.373 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-06-17 09:13:43.716 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.VoucherService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllVouchers(ParkingController.java:787)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 09:13:52.597 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54] 
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:305)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:275)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:381)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:207)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:82)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:524)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:481)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.VoucherService$$SpringCGLIB$$0.findAll(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.getAllVouchers(ParkingController.java:787)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.springframework.data.domain.PageImpl` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 54]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1375)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:220)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380)
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950)
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54)
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:303)
	... 141 common frames omitted
2025-06-17 09:19:09.398 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 09:19:09.442 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 09:19:09.478 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 09:20:00.665 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 39213 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 09:20:00.669 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 09:20:00.670 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 09:20:03.611 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 09:20:03.615 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 09:20:03.922 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 287 ms. Found 5 JPA repository interfaces.
2025-06-17 09:20:03.948 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 09:20:03.950 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 09:20:03.981 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 09:20:03.982 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 09:20:03.982 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 09:20:03.983 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 09:20:03.983 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 09:20:03.983 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-06-17 09:20:05.521 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 09:20:05.545 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 09:20:05.545 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 09:20:05.660 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 09:20:05.661 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4904 ms
2025-06-17 09:20:06.396 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 09:20:06.742 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@270f7b4d
2025-06-17 09:20:06.744 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 09:20:06.793 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 09:20:06.867 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.047s)
2025-06-17 09:20:06.944 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 09:20:06.948 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 09:20:07.131 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 09:20:07.215 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 09:20:07.260 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 09:20:07.755 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 09:20:07.841 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 09:20:10.337 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 09:20:10.531 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 09:20:11.257 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 09:20:14.895 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 09:20:15.209 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 09:20:16.358 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 09:20:18.799 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 09:20:18.842 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 19.875 seconds (process running for 21.485)
2025-06-17 09:20:19.132 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 09:21:58.446 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 09:21:58.451 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 09:21:58.493 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 41 ms
2025-06-17 09:21:59.401 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 09:21:59.840 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 09:22:00.148 [http-nio-8081-exec-1] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-06-17 09:22:17.256 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 09:22:17.297 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 09:24:02.569 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 09:24:02.687 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 09:24:27.911 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 09:24:27.914 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 09:24:39.426 [http-nio-8081-exec-10] INFO  org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 1539 ms
2025-06-17 09:25:17.716 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 09:25:17.719 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 09:26:34.062 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 09:26:34.067 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 09:28:39.024 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 09:28:39.201 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 09:28:47.900 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 09:28:47.902 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 09:29:48.804 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 09:29:48.844 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 09:30:14.838 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 09:30:14.845 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 09:30:52.827 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: null
2025-06-17 09:30:53.636 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-06-17 09:34:01.186 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: null
2025-06-17 09:34:01.309 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-06-17 09:36:46.064 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: null
2025-06-17 09:36:46.070 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-06-17 09:37:13.330 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 09:37:13.390 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 09:45:09.652 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m32s217ms).
2025-06-17 09:47:17.588 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 09:47:17.624 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 09:51:10.159 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 09:51:10.170 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 09:51:25.922 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: null
2025-06-17 09:51:25.948 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-06-17 09:51:50.649 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 09:52:01.931 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.DashboardService - Generate report format PDF dari 2025-06-01 sampai 2025-06-30
2025-06-17 09:52:31.496 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 09:53:19.321 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 09:53:19.364 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 09:53:19.377 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 10:12:27.035 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 41187 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 10:12:27.039 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 10:12:27.040 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 10:12:33.406 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:12:33.459 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 10:12:35.530 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1816 ms. Found 5 JPA repository interfaces.
2025-06-17 10:12:35.568 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:12:35.570 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 10:12:35.868 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:12:35.869 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:12:35.870 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:12:35.873 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:12:35.874 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:12:35.874 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 279 ms. Found 0 Redis repository interfaces.
2025-06-17 10:12:39.931 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 10:12:39.978 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 10:12:39.979 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 10:12:40.155 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 10:12:40.156 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 12956 ms
2025-06-17 10:12:41.345 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 10:12:41.834 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3cf70afa
2025-06-17 10:12:41.838 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 10:12:41.904 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 10:12:42.016 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.068s)
2025-06-17 10:12:42.070 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 10:12:42.079 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 10:12:42.324 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 10:12:42.471 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 10:12:42.598 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 10:12:43.381 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 10:12:43.494 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 10:12:46.111 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 10:12:46.228 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 10:12:47.287 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 10:12:51.576 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 10:12:51.794 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 10:12:53.060 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 10:12:55.155 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 10:12:55.188 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 29.335 seconds (process running for 30.171)
2025-06-17 10:12:55.490 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 10:12:57.313 [http-nio-8081-exec-2] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 10:12:57.324 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 10:12:57.333 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2025-06-17 10:12:57.796 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: , date: 2025-06-01, status: null
2025-06-17 10:12:57.797 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Filtering by date only: 2025-06-01
2025-06-17 10:12:58.062 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 10:12:58.093 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Found 0 tickets matching criteria
2025-06-17 10:12:58.177 [http-nio-8081-exec-2] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-06-17 10:13:14.028 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: f, date: 2025-06-01, status: null
2025-06-17 10:13:14.029 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Filtering by plate number AND date: F on 2025-06-01
2025-06-17 10:13:14.053 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:13:14.058 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Found 0 tickets matching criteria
2025-06-17 10:13:15.516 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 1, date: 2025-06-01, status: null
2025-06-17 10:13:15.517 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Filtering by plate number AND date: 1 on 2025-06-01
2025-06-17 10:13:15.520 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:13:15.522 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Found 0 tickets matching criteria
2025-06-17 10:13:37.669 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: , date: 2025-06-01, status: null
2025-06-17 10:13:37.670 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Filtering by date only: 2025-06-01
2025-06-17 10:13:37.674 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 10:13:37.677 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Found 0 tickets matching criteria
2025-06-17 10:14:57.406 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: , date: 2025-06-01, status: null
2025-06-17 10:14:57.412 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Filtering by date only: 2025-06-01
2025-06-17 10:14:57.508 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 10:14:57.527 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Found 0 tickets matching criteria
2025-06-17 10:15:37.260 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 10:15:37.276 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 10:15:37.287 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 10:15:40.918 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 41286 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 10:15:40.921 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 10:15:40.922 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 10:15:42.579 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:15:42.581 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 10:15:42.807 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 215 ms. Found 5 JPA repository interfaces.
2025-06-17 10:15:42.830 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:15:42.832 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 10:15:42.856 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:15:42.857 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:15:42.857 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:15:42.857 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:15:42.858 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:15:42.858 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-06-17 10:15:43.989 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 10:15:44.006 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 10:15:44.006 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 10:15:44.105 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 10:15:44.105 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3090 ms
2025-06-17 10:15:44.643 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 10:15:44.868 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@45832b85
2025-06-17 10:15:44.869 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 10:15:44.908 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 10:15:44.960 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.029s)
2025-06-17 10:15:45.024 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 10:15:45.036 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 10:15:45.175 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 10:15:45.247 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 10:15:45.286 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 10:15:45.657 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 10:15:45.717 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 10:15:47.073 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 10:15:47.125 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 10:15:47.636 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 10:15:49.986 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 10:15:50.106 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 10:15:50.679 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 10:15:51.734 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 10:15:51.758 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 12.117 seconds (process running for 13.104)
2025-06-17 10:15:52.039 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 10:32:47.015 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 10:32:47.037 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 10:32:47.053 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 10:35:53.155 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 41872 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 10:35:53.159 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 10:35:53.160 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 10:35:55.163 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:35:55.166 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 10:35:55.425 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 245 ms. Found 5 JPA repository interfaces.
2025-06-17 10:35:55.453 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:35:55.455 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 10:35:55.481 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:35:55.482 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:35:55.482 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:35:55.484 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:35:55.484 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:35:55.484 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-06-17 10:35:56.755 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 10:35:56.779 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 10:35:56.780 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 10:35:56.881 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 10:35:56.882 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3621 ms
2025-06-17 10:35:57.509 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 10:35:57.761 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@278cb145
2025-06-17 10:35:57.763 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 10:35:57.805 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 10:35:57.880 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.050s)
2025-06-17 10:35:57.926 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 10:35:57.929 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 10:35:58.106 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 10:35:58.194 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 10:35:58.245 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 10:35:58.769 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 10:35:58.851 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 10:36:00.638 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 10:36:00.703 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 10:36:01.252 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 10:36:04.607 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 10:36:04.738 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 10:36:05.374 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 10:36:06.761 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 10:36:06.794 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 14.892 seconds (process running for 15.955)
2025-06-17 10:36:07.117 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 10:36:10.738 [http-nio-8081-exec-2] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 10:36:10.741 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 10:36:10.774 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 29 ms
2025-06-17 10:36:11.360 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-01, status: 'null'
2025-06-17 10:36:11.361 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-01, status: null
2025-06-17 10:36:11.361 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-01
2025-06-17 10:36:11.361 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-01T00:00 to 2025-06-01T23:59:59
2025-06-17 10:36:12.156 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 10:36:12.215 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:36:12.216 [http-nio-8081-exec-1] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:36:12.704 [http-nio-8081-exec-1] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-06-17 10:36:17.460 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Getting dashboard statistics from 2025-06-01 to 2025-06-30
2025-06-17 10:36:17.465 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Today: 2025-06-17, range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 10:36:17.483 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:17.674 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:17.715 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:17.745 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(pt1_0.id) 
    from
        parking_tickets pt1_0 
    where
        pt1_0.status=?
2025-06-17 10:36:17.851 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:17.892 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:17.900 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.payment_method,
        count(p1_0.id),
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.payment_time between ? and ? 
        and p1_0.status='SUCCESS' 
    group by
        p1_0.payment_method
2025-06-17 10:36:17.908 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:17.911 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:17.916 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:17.932 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:17.935 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:17.942 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:17.944 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:17.946 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:17.949 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:17.951 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:17.962 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:17.965 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-01T00:00 to 2025-06-01T23:59:59
2025-06-17 10:36:17.967 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:17.969 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:17.976 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:17.978 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-02T00:00 to 2025-06-02T23:59:59
2025-06-17 10:36:17.980 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:17.982 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:17.986 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:17.989 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-03T00:00 to 2025-06-03T23:59:59
2025-06-17 10:36:17.990 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:17.992 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:17.996 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:17.998 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-04T00:00 to 2025-06-04T23:59:59
2025-06-17 10:36:18.000 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.003 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.006 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.008 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-05T00:00 to 2025-06-05T23:59:59
2025-06-17 10:36:18.140 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.142 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.159 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.162 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-06T00:00 to 2025-06-06T23:59:59
2025-06-17 10:36:18.164 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.173 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.180 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.184 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-07T00:00 to 2025-06-07T23:59:59
2025-06-17 10:36:18.188 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.191 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.196 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.199 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-08T00:00 to 2025-06-08T23:59:59
2025-06-17 10:36:18.202 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.216 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.222 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.227 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-09T00:00 to 2025-06-09T23:59:59
2025-06-17 10:36:18.230 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.236 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.241 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.242 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-10T00:00 to 2025-06-10T23:59:59
2025-06-17 10:36:18.244 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.245 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.247 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.248 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-11T00:00 to 2025-06-11T23:59:59
2025-06-17 10:36:18.250 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.251 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.255 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.257 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-12T00:00 to 2025-06-12T23:59:59
2025-06-17 10:36:18.259 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.426 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.440 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.504 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-13T00:00 to 2025-06-13T23:59:59
2025-06-17 10:36:18.506 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.744 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.750 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.756 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-14T00:00 to 2025-06-14T23:59:59
2025-06-17 10:36:18.757 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.899 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 54300.00
2025-06-17 10:36:18.903 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.907 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-15T00:00 to 2025-06-15T23:59:59
2025-06-17 10:36:18.909 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.921 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.927 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.933 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-16T00:00 to 2025-06-16T23:59:59
2025-06-17 10:36:18.934 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.936 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.939 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.940 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 10:36:18.942 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.944 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 33000.00
2025-06-17 10:36:18.947 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.949 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-18T00:00 to 2025-06-18T23:59:59
2025-06-17 10:36:18.950 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.952 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.955 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.957 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-19T00:00 to 2025-06-19T23:59:59
2025-06-17 10:36:18.958 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.959 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.962 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.964 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-20T00:00 to 2025-06-20T23:59:59
2025-06-17 10:36:18.966 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.968 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.973 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.976 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-21T00:00 to 2025-06-21T23:59:59
2025-06-17 10:36:18.978 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.979 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.983 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:18.984 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-22T00:00 to 2025-06-22T23:59:59
2025-06-17 10:36:18.989 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:18.994 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:18.997 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:19.001 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-23T00:00 to 2025-06-23T23:59:59
2025-06-17 10:36:19.003 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:19.008 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:19.137 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:19.194 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-24T00:00 to 2025-06-24T23:59:59
2025-06-17 10:36:19.197 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:19.203 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:19.207 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:19.222 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-25T00:00 to 2025-06-25T23:59:59
2025-06-17 10:36:19.223 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:19.225 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:19.235 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:19.243 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-26T00:00 to 2025-06-26T23:59:59
2025-06-17 10:36:19.245 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:19.249 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:19.255 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:19.258 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-27T00:00 to 2025-06-27T23:59:59
2025-06-17 10:36:19.378 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:19.390 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:19.394 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:19.401 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-28T00:00 to 2025-06-28T23:59:59
2025-06-17 10:36:19.403 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:19.409 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:19.413 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:19.417 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-29T00:00 to 2025-06-29T23:59:59
2025-06-17 10:36:19.420 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:19.445 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:19.451 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:19.457 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-30T00:00 to 2025-06-30T23:59:59
2025-06-17 10:36:19.459 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:19.470 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:19.480 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 10:36:19.734 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.id) 
    from
        members m1_0 
    where
        m1_0.active
2025-06-17 10:36:19.743 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.DashboardService - Statistics calculated - Today: 2 vehicles, 33000.00 revenue
2025-06-17 10:36:20.078 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-01, status: 'null'
2025-06-17 10:36:20.079 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-01, status: null
2025-06-17 10:36:20.079 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-01
2025-06-17 10:36:20.079 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-01T00:00 to 2025-06-01T23:59:59
2025-06-17 10:36:20.082 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 10:36:20.084 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:36:20.084 [http-nio-8081-exec-4] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:36:20.091 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Getting dashboard statistics from 2025-06-01 to 2025-06-30
2025-06-17 10:36:20.092 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Today: 2025-06-17, range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 10:36:20.095 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.097 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:20.099 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:20.101 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(pt1_0.id) 
    from
        parking_tickets pt1_0 
    where
        pt1_0.status=?
2025-06-17 10:36:20.104 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.106 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.108 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.payment_method,
        count(p1_0.id),
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.payment_time between ? and ? 
        and p1_0.status='SUCCESS' 
    group by
        p1_0.payment_method
2025-06-17 10:36:20.112 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.114 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:20.116 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:20.119 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:20.122 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:20.124 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:20.125 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:20.126 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:20.128 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:20.130 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:36:20.136 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.263 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-01T00:00 to 2025-06-01T23:59:59
2025-06-17 10:36:20.264 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.268 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.272 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.275 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-02T00:00 to 2025-06-02T23:59:59
2025-06-17 10:36:20.276 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.278 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.282 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.288 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-03T00:00 to 2025-06-03T23:59:59
2025-06-17 10:36:20.289 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.291 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.294 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.312 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-04T00:00 to 2025-06-04T23:59:59
2025-06-17 10:36:20.315 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.324 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.327 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.330 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-05T00:00 to 2025-06-05T23:59:59
2025-06-17 10:36:20.332 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.338 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.341 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.344 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-06T00:00 to 2025-06-06T23:59:59
2025-06-17 10:36:20.346 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.354 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.358 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.362 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-07T00:00 to 2025-06-07T23:59:59
2025-06-17 10:36:20.364 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.367 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.370 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.372 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-08T00:00 to 2025-06-08T23:59:59
2025-06-17 10:36:20.374 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.376 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.379 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.413 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-09T00:00 to 2025-06-09T23:59:59
2025-06-17 10:36:20.415 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.424 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.426 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.439 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-10T00:00 to 2025-06-10T23:59:59
2025-06-17 10:36:20.440 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.531 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.565 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.568 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-11T00:00 to 2025-06-11T23:59:59
2025-06-17 10:36:20.570 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.571 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.578 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.585 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-12T00:00 to 2025-06-12T23:59:59
2025-06-17 10:36:20.587 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.589 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.593 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.594 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-13T00:00 to 2025-06-13T23:59:59
2025-06-17 10:36:20.598 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.604 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.608 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.612 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-14T00:00 to 2025-06-14T23:59:59
2025-06-17 10:36:20.615 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.618 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 54300.00
2025-06-17 10:36:20.623 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.625 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-15T00:00 to 2025-06-15T23:59:59
2025-06-17 10:36:20.628 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.634 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.657 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.908 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-16T00:00 to 2025-06-16T23:59:59
2025-06-17 10:36:20.913 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.925 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.931 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.939 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 10:36:20.941 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.944 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 33000.00
2025-06-17 10:36:20.948 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.954 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-18T00:00 to 2025-06-18T23:59:59
2025-06-17 10:36:20.956 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.958 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.961 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.965 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-19T00:00 to 2025-06-19T23:59:59
2025-06-17 10:36:20.966 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.971 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.974 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.977 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-20T00:00 to 2025-06-20T23:59:59
2025-06-17 10:36:20.979 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:20.987 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:20.991 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:20.993 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-21T00:00 to 2025-06-21T23:59:59
2025-06-17 10:36:20.996 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:21.005 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:21.008 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:21.010 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-22T00:00 to 2025-06-22T23:59:59
2025-06-17 10:36:21.011 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:21.015 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:21.021 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:21.039 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-23T00:00 to 2025-06-23T23:59:59
2025-06-17 10:36:21.041 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:21.046 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:21.049 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:21.051 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-24T00:00 to 2025-06-24T23:59:59
2025-06-17 10:36:21.052 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:21.055 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:21.059 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:21.062 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-25T00:00 to 2025-06-25T23:59:59
2025-06-17 10:36:21.063 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:21.065 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:21.068 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:21.070 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-26T00:00 to 2025-06-26T23:59:59
2025-06-17 10:36:21.073 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:21.074 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:21.076 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:21.078 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-27T00:00 to 2025-06-27T23:59:59
2025-06-17 10:36:21.080 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:21.082 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:21.087 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:21.089 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-28T00:00 to 2025-06-28T23:59:59
2025-06-17 10:36:21.093 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:21.095 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:21.099 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:21.101 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-29T00:00 to 2025-06-29T23:59:59
2025-06-17 10:36:21.104 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:21.105 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:21.110 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:36:21.112 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-30T00:00 to 2025-06-30T23:59:59
2025-06-17 10:36:21.114 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:36:21.116 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:36:21.119 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 10:36:21.126 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.id) 
    from
        members m1_0 
    where
        m1_0.active
2025-06-17 10:36:21.128 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.DashboardService - Statistics calculated - Today: 2 vehicles, 33000.00 revenue
2025-06-17 10:36:58.825 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'b', date: 2025-06-01, status: 'null'
2025-06-17 10:36:58.826 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B', date: 2025-06-01, status: null
2025-06-17 10:36:58.826 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B, date=2025-06-01
2025-06-17 10:36:58.860 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:36:58.865 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:36:58.865 [http-nio-8081-exec-6] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:37:01.851 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'b1', date: 2025-06-01, status: 'null'
2025-06-17 10:37:01.852 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B1', date: 2025-06-01, status: null
2025-06-17 10:37:01.852 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B1, date=2025-06-01
2025-06-17 10:37:01.854 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:37:01.863 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:37:01.864 [http-nio-8081-exec-7] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:37:02.156 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'b12', date: 2025-06-01, status: 'null'
2025-06-17 10:37:02.157 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B12', date: 2025-06-01, status: null
2025-06-17 10:37:02.159 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B12, date=2025-06-01
2025-06-17 10:37:02.161 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:37:02.163 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:37:02.164 [http-nio-8081-exec-8] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:38:18.272 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-14, status: 'null'
2025-06-17 10:38:18.276 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-14, status: null
2025-06-17 10:38:18.276 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-14
2025-06-17 10:38:18.277 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-14T00:00 to 2025-06-14T23:59:59
2025-06-17 10:38:18.317 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 10:38:18.338 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:18.354 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:18.359 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:18.361 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:18.365 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:18.368 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 10:38:34.828 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: null, status: 'null'
2025-06-17 10:38:34.830 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: null, status: null
2025-06-17 10:38:34.830 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - No filters applied, getting all tickets
2025-06-17 10:38:34.894 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-06-17 10:38:34.897 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:34.899 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:34.900 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:34.902 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:34.904 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:34.905 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:34.906 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:34.908 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:34.909 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:34.911 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:34.912 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:38:34.916 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 11 tickets
2025-06-17 10:39:01.594 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'b12', date: 2025-06-01, status: 'null'
2025-06-17 10:39:01.603 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B12', date: 2025-06-01, status: null
2025-06-17 10:39:01.604 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B12, date=2025-06-01
2025-06-17 10:39:01.638 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:39:01.657 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:39:01.657 [http-nio-8081-exec-5] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:39:20.928 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-14, status: 'null'
2025-06-17 10:39:20.929 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-14, status: null
2025-06-17 10:39:20.929 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-14
2025-06-17 10:39:20.929 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-14T00:00 to 2025-06-14T23:59:59
2025-06-17 10:39:20.944 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 10:39:20.952 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:39:20.957 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:39:20.959 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:39:20.967 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:39:20.975 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:39:20.978 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 10:47:16.529 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'b12', date: 2025-06-01, status: 'null'
2025-06-17 10:47:16.535 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B12', date: 2025-06-01, status: null
2025-06-17 10:47:16.535 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B12, date=2025-06-01
2025-06-17 10:47:16.629 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:47:18.317 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:47:18.317 [http-nio-8081-exec-4] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:47:18.846 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 10:47:18.897 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 10:47:18.931 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 10:47:34.072 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 42339 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 10:47:34.075 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 10:47:34.077 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 10:47:39.398 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:47:39.404 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 10:47:40.139 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 712 ms. Found 5 JPA repository interfaces.
2025-06-17 10:47:40.258 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 10:47:40.265 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 10:47:40.366 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:47:40.367 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:47:40.390 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:47:40.392 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:47:40.394 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 10:47:40.395 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 86 ms. Found 0 Redis repository interfaces.
2025-06-17 10:47:43.298 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 10:47:43.327 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 10:47:43.328 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 10:47:43.471 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 10:47:43.472 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 9103 ms
2025-06-17 10:47:44.538 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 10:47:44.922 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2d2f09a4
2025-06-17 10:47:44.925 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 10:47:44.983 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 10:47:45.070 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.052s)
2025-06-17 10:47:45.133 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 10:47:45.142 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 10:47:45.363 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 10:47:45.491 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 10:47:45.556 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 10:47:46.128 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 10:47:46.232 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 10:47:48.781 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 10:47:48.961 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 10:47:50.025 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 10:47:54.742 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 10:47:54.932 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 10:47:55.972 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 10:47:58.091 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 10:47:58.129 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 27.418 seconds (process running for 30.31)
2025-06-17 10:47:58.706 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 10:48:21.681 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 10:48:21.685 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 10:48:21.705 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2025-06-17 10:48:21.985 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 10:48:21.986 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 10:48:21.986 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 10:48:21.986 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 10:48:22.185 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 10:48:22.219 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:22.303 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:22.333 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 2 tickets
2025-06-17 10:48:22.444 [http-nio-8081-exec-3] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-06-17 10:48:40.525 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Getting dashboard statistics from 2025-06-11 to 2025-06-17
2025-06-17 10:48:40.526 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Today: 2025-06-17, range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 10:48:40.531 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:48:40.535 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:40.539 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:40.560 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(pt1_0.id) 
    from
        parking_tickets pt1_0 
    where
        pt1_0.status=?
2025-06-17 10:48:40.576 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:48:40.585 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:48:40.592 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.payment_method,
        count(p1_0.id),
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.payment_time between ? and ? 
        and p1_0.status='SUCCESS' 
    group by
        p1_0.payment_method
2025-06-17 10:48:40.599 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:48:40.603 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:40.606 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:40.622 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:40.624 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:40.627 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:40.630 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:40.633 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:40.636 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:40.639 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:40.651 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:48:40.654 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-11T00:00 to 2025-06-11T23:59:59
2025-06-17 10:48:40.656 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:48:40.658 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:48:40.662 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:48:40.665 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-12T00:00 to 2025-06-12T23:59:59
2025-06-17 10:48:40.667 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:48:40.670 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:48:40.673 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:48:40.676 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-13T00:00 to 2025-06-13T23:59:59
2025-06-17 10:48:40.678 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:48:40.680 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:48:40.686 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:48:40.689 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-14T00:00 to 2025-06-14T23:59:59
2025-06-17 10:48:40.690 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:48:40.692 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 54300.00
2025-06-17 10:48:40.696 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:48:40.698 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-15T00:00 to 2025-06-15T23:59:59
2025-06-17 10:48:40.701 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:48:40.703 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:48:40.706 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:48:40.708 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-16T00:00 to 2025-06-16T23:59:59
2025-06-17 10:48:40.710 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:48:40.712 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 10:48:40.716 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 10:48:40.720 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 10:48:40.721 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 10:48:40.723 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 33000.00
2025-06-17 10:48:40.729 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 10:48:40.766 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.id) 
    from
        members m1_0 
    where
        m1_0.active
2025-06-17 10:48:40.774 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.DashboardService - Statistics calculated - Today: 2 vehicles, 33000.00 revenue
2025-06-17 10:48:50.634 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-16, status: 'null'
2025-06-17 10:48:50.635 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-16, status: null
2025-06-17 10:48:50.635 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-16
2025-06-17 10:48:50.636 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-16T00:00 to 2025-06-16T23:59:59
2025-06-17 10:48:50.641 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 10:48:50.644 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:48:50.647 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 1 tickets
2025-06-17 10:49:26.861 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'f', date: 2025-06-16, status: 'null'
2025-06-17 10:49:26.863 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'F', date: 2025-06-16, status: null
2025-06-17 10:49:26.863 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=F, date=2025-06-16
2025-06-17 10:49:26.880 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:49:26.885 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:49:26.886 [http-nio-8081-exec-10] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:49:27.794 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'fr', date: 2025-06-16, status: 'null'
2025-06-17 10:49:27.795 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'FR', date: 2025-06-16, status: null
2025-06-17 10:49:27.795 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=FR, date=2025-06-16
2025-06-17 10:49:27.797 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:49:27.800 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:49:27.801 [http-nio-8081-exec-3] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:49:28.261 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'frd', date: 2025-06-16, status: 'null'
2025-06-17 10:49:28.261 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'FRD', date: 2025-06-16, status: null
2025-06-17 10:49:28.261 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=FRD, date=2025-06-16
2025-06-17 10:49:28.263 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:49:28.298 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:49:28.298 [http-nio-8081-exec-4] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:49:29.242 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'b', date: 2025-06-16, status: 'null'
2025-06-17 10:49:29.243 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B', date: 2025-06-16, status: null
2025-06-17 10:49:29.243 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B, date=2025-06-16
2025-06-17 10:49:29.245 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:49:29.247 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:49:29.248 [http-nio-8081-exec-6] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:49:29.808 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'b1', date: 2025-06-16, status: 'null'
2025-06-17 10:49:29.808 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B1', date: 2025-06-16, status: null
2025-06-17 10:49:29.808 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B1, date=2025-06-16
2025-06-17 10:49:29.810 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:49:29.816 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:49:29.817 [http-nio-8081-exec-8] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:49:30.919 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'b12', date: 2025-06-16, status: 'null'
2025-06-17 10:49:30.919 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B12', date: 2025-06-16, status: null
2025-06-17 10:49:30.919 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B12, date=2025-06-16
2025-06-17 10:49:30.921 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:49:30.925 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:49:30.925 [http-nio-8081-exec-10] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:49:31.264 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'b123', date: 2025-06-16, status: 'null'
2025-06-17 10:49:31.264 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B123', date: 2025-06-16, status: null
2025-06-17 10:49:31.264 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B123, date=2025-06-16
2025-06-17 10:49:31.266 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:49:31.269 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:49:31.270 [http-nio-8081-exec-3] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:49:31.541 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'b123f', date: 2025-06-16, status: 'null'
2025-06-17 10:49:31.541 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B123F', date: 2025-06-16, status: null
2025-06-17 10:49:31.541 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B123F, date=2025-06-16
2025-06-17 10:49:31.543 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:49:31.546 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:49:31.546 [http-nio-8081-exec-4] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:49:31.793 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'b123fr', date: 2025-06-16, status: 'null'
2025-06-17 10:49:31.794 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B123FR', date: 2025-06-16, status: null
2025-06-17 10:49:31.794 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B123FR, date=2025-06-16
2025-06-17 10:49:31.796 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:49:31.837 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 10:49:31.838 [http-nio-8081-exec-6] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 10:49:32.115 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'b123frd', date: 2025-06-16, status: 'null'
2025-06-17 10:49:32.115 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B123FRD', date: 2025-06-16, status: null
2025-06-17 10:49:32.116 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B123FRD, date=2025-06-16
2025-06-17 10:49:32.118 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 10:49:32.121 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:49:32.123 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 1 tickets
2025-06-17 10:50:48.378 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-16, status: 'null'
2025-06-17 10:50:48.385 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-16, status: null
2025-06-17 10:50:48.385 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-16
2025-06-17 10:50:48.385 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-16T00:00 to 2025-06-16T23:59:59
2025-06-17 10:50:48.429 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 10:50:48.440 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 10:50:48.448 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 1 tickets
2025-06-17 11:22:58.219 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 11:22:58.278 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 11:22:58.298 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 11:27:46.863 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 44350 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 11:27:46.867 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 11:27:46.868 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 11:27:50.580 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 11:27:50.584 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 11:27:50.957 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 356 ms. Found 5 JPA repository interfaces.
2025-06-17 11:27:50.994 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 11:27:50.997 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 11:27:51.034 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 11:27:51.035 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 11:27:51.036 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 11:27:51.036 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 11:27:51.037 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 11:27:51.038 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2025-06-17 11:27:52.784 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 11:27:52.810 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 11:27:52.811 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 11:27:53.013 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 11:27:53.014 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5883 ms
2025-06-17 11:27:53.906 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 11:27:54.470 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@45832b85
2025-06-17 11:27:54.472 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 11:27:54.533 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 11:27:54.635 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.058s)
2025-06-17 11:27:54.676 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 11:27:54.683 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 11:27:54.866 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 11:27:54.981 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 11:27:55.041 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 11:27:55.569 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 11:27:55.665 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 11:27:57.696 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 11:27:57.806 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 11:27:58.535 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 11:28:02.503 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 11:28:02.680 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 11:28:03.570 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 11:28:05.092 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 11:28:05.150 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 21.136 seconds (process running for 22.534)
2025-06-17 11:28:05.429 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 11:29:50.006 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 11:29:50.009 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 11:29:50.039 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 29 ms
2025-06-17 11:29:51.206 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 11:29:51.367 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:29:51.394 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:29:51.421 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 10, photoPath: checkin/2025/06/17/checkin_1750125904984_c295909e.jpg
2025-06-17 11:29:51.423 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750125904984_c295909e.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750125904984_c295909e.jpg
2025-06-17 11:29:51.622 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 11:29:51.628 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:29:51.652 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:29:51.655 [http-nio-8081-exec-4] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo: ./uploads/checkin/2025/06/17/checkin_1750125904984_c295909e.jpg
2025-06-17 11:29:51.657 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.controller.PhotoController - Successfully serving photo: ./uploads/checkin/2025/06/17/checkin_1750125904984_c295909e.jpg
2025-06-17 11:29:52.105 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 11:29:52.108 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:29:52.110 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:37:38.407 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 11:37:38.504 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:37:38.525 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:37:38.830 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 11:37:38.833 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:37:38.849 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:38:12.147 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B123FRD
2025-06-17 11:38:12.152 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:38:12.174 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:38:12.182 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 11:38:12.186 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:38:12.381 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750135092199_a596f162.jpg
2025-06-17 11:38:12.510 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        payments
        (amount, created_at, parking_ticket_id, payment_method, payment_time, reference_number, status) 
    values
        (?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 11:38:12.593 [http-nio-8081-exec-1] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Generate invoice untuk ticket ID: 10
2025-06-17 11:38:12.629 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        ir1_0.id,
        ir1_0.base_amount,
        ir1_0.check_in_time,
        ir1_0.check_out_time,
        ir1_0.created_at,
        ir1_0.discount_amount,
        ir1_0.duration_minutes,
        ir1_0.invoice_date,
        ir1_0.invoice_number,
        ir1_0.member_name,
        ir1_0.operator_name,
        ir1_0.parking_ticket_id,
        ir1_0.payment_method,
        ir1_0.payment_reference,
        ir1_0.plate_number,
        ir1_0.status,
        ir1_0.total_amount,
        ir1_0.voucher_code 
    from
        invoice_receipts ir1_0 
    where
        ir1_0.invoice_date between ? and ?
2025-06-17 11:38:12.675 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_receipts
        (base_amount, check_in_time, check_out_time, created_at, discount_amount, duration_minutes, invoice_date, invoice_number, member_name, operator_name, parking_ticket_id, payment_method, payment_reference, plate_number, status, total_amount, voucher_code) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 11:38:12.685 [http-nio-8081-exec-1] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Invoice INV-202506170002 berhasil dibuat
2025-06-17 11:38:12.729 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Check-out berhasil dengan invoice: INV-202506170002
2025-06-17 11:38:12.752 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        parking_tickets 
    set
        check_in_gate=?,
        check_in_operator=?,
        check_in_photo_path=?,
        check_in_time=?,
        check_out_gate=?,
        check_out_operator=?,
        check_out_photo_path=?,
        check_out_time=?,
        member_id=?,
        member_name=?,
        parking_fee=?,
        plate_number=?,
        status=?,
        updated_at=?,
        vehicle_type=? 
    where
        id=?
2025-06-17 11:38:19.472 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 11:38:19.481 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:38:19.603 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 11:38:20.672 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 11:38:20.677 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:38:20.682 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 11:38:22.705 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 11:38:22.712 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:38:22.717 [http-nio-8081-exec-3] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 11:38:26.035 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B22
2025-06-17 11:38:26.041 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:38:26.046 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B22
2025-06-17 11:38:27.074 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B22
2025-06-17 11:38:27.078 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:38:27.082 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B22
2025-06-17 11:38:29.104 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B22
2025-06-17 11:38:29.110 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:38:29.114 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B22
2025-06-17 11:38:37.569 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 11:38:37.570 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 11:38:37.570 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 11:38:37.571 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 11:38:37.602 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 11:38:37.656 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:38:37.661 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:38:37.669 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 2 tickets
2025-06-17 11:38:37.703 [http-nio-8081-exec-10] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-06-17 11:38:50.231 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B22FRD
2025-06-17 11:38:50.236 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:38:50.238 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:38:50.247 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 11, photoPath: checkin/2025/06/17/checkin_1750126191828_2ca47d55.jpg
2025-06-17 11:38:50.247 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750126191828_2ca47d55.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750126191828_2ca47d55.jpg
2025-06-17 11:38:50.322 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 11:38:50.329 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:38:50.333 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:38:50.335 [http-nio-8081-exec-8] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo: ./uploads/checkin/2025/06/17/checkin_1750126191828_2ca47d55.jpg
2025-06-17 11:38:50.338 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.controller.PhotoController - Successfully serving photo: ./uploads/checkin/2025/06/17/checkin_1750126191828_2ca47d55.jpg
2025-06-17 11:38:50.801 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 11:38:50.804 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:38:50.805 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:39:02.533 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 11:39:02.539 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:39:02.545 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:39:04.353 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 11:39:04.357 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:39:04.370 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:39:21.577 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 11:39:21.581 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:39:21.586 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:39:52.752 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.parkee.parkingpos.domain.entity.PaymentMethod` from String "E_TOLL": not one of the values accepted for Enum class: [GOPAY, DEBIT_CARD, OVO, QRIS, DANA, SHOPEEPAY, CASH, TAPCASH, MEMBER_BALANCE, FLAZZ, LINKAJA, BRIZZI, CREDIT_CARD, EMONEY]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:406)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:354)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:184)
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:141)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.parkee.parkingpos.domain.entity.PaymentMethod` from String "E_TOLL": not one of the values accepted for Enum class: [GOPAY, DEBIT_CARD, OVO, QRIS, DANA, SHOPEEPAY, CASH, TAPCASH, MEMBER_BALANCE, FLAZZ, LINKAJA, BRIZZI, CREDIT_CARD, EMONEY]
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 41] (through reference chain: com.parkee.parkingpos.dto.CheckOutRequestDto["paymentMethod"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1958)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1245)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:447)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:304)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:273)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:399)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2125)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1501)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:395)
	... 125 common frames omitted
2025-06-17 11:40:09.752 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B22FRD
2025-06-17 11:40:09.777 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:40:09.783 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:40:09.788 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 11:40:09.795 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:40:09.803 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750135209798_4235bdec.jpg
2025-06-17 11:40:09.807 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        payments
        (amount, created_at, parking_ticket_id, payment_method, payment_time, reference_number, status) 
    values
        (?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 11:40:09.814 [http-nio-8081-exec-8] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Generate invoice untuk ticket ID: 11
2025-06-17 11:40:09.830 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        ir1_0.id,
        ir1_0.base_amount,
        ir1_0.check_in_time,
        ir1_0.check_out_time,
        ir1_0.created_at,
        ir1_0.discount_amount,
        ir1_0.duration_minutes,
        ir1_0.invoice_date,
        ir1_0.invoice_number,
        ir1_0.member_name,
        ir1_0.operator_name,
        ir1_0.parking_ticket_id,
        ir1_0.payment_method,
        ir1_0.payment_reference,
        ir1_0.plate_number,
        ir1_0.status,
        ir1_0.total_amount,
        ir1_0.voucher_code 
    from
        invoice_receipts ir1_0 
    where
        ir1_0.invoice_date between ? and ?
2025-06-17 11:40:09.837 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_receipts
        (base_amount, check_in_time, check_out_time, created_at, discount_amount, duration_minutes, invoice_date, invoice_number, member_name, operator_name, parking_ticket_id, payment_method, payment_reference, plate_number, status, total_amount, voucher_code) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 11:40:09.840 [http-nio-8081-exec-8] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Invoice INV-202506170003 berhasil dibuat
2025-06-17 11:40:09.854 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Check-out berhasil dengan invoice: INV-202506170003
2025-06-17 11:40:09.857 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        parking_tickets 
    set
        check_in_gate=?,
        check_in_operator=?,
        check_in_photo_path=?,
        check_in_time=?,
        check_out_gate=?,
        check_out_operator=?,
        check_out_photo_path=?,
        check_out_time=?,
        member_id=?,
        member_name=?,
        parking_fee=?,
        plate_number=?,
        status=?,
        updated_at=?,
        vehicle_type=? 
    where
        id=?
2025-06-17 11:48:19.454 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 11:48:19.607 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:48:19.727 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 11:48:20.802 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 11:48:20.847 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:48:20.870 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 11:48:22.926 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 11:48:22.932 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:48:22.973 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 11:48:26.080 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B22FRD
2025-06-17 11:48:26.083 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:48:26.087 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B22FRD
2025-06-17 11:48:27.117 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B22FRD
2025-06-17 11:48:27.123 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:48:27.140 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B22FRD
2025-06-17 11:48:29.169 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B22FRD
2025-06-17 11:48:29.173 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:48:29.180 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B22FRD
2025-06-17 11:48:58.353 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B1X
2025-06-17 11:48:58.419 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:48:58.436 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750135738430_ba6dc73d.jpg
2025-06-17 11:48:58.506 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 11:48:58.539 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 11:48:58.587 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 12
2025-06-17 11:48:58.588 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 12, photoPath: checkin/2025/06/17/checkin_1750135738430_ba6dc73d.jpg
2025-06-17 11:48:58.589 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750135738430_ba6dc73d.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750135738430_ba6dc73d.jpg
2025-06-17 11:49:53.365 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B1X
2025-06-17 11:49:53.390 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:49:53.416 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:49:53.457 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 12, photoPath: checkin/2025/06/17/checkin_1750135738430_ba6dc73d.jpg
2025-06-17 11:49:53.459 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750135738430_ba6dc73d.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750135738430_ba6dc73d.jpg
2025-06-17 11:49:53.569 [http-nio-8081-exec-7] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo: ./uploads/checkin/2025/06/17/checkin_1750135738430_ba6dc73d.jpg
2025-06-17 11:49:53.577 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.controller.PhotoController - Successfully serving photo: ./uploads/checkin/2025/06/17/checkin_1750135738430_ba6dc73d.jpg
2025-06-17 11:49:53.577 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B1X
2025-06-17 11:49:53.581 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:49:53.604 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:49:54.067 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B1X
2025-06-17 11:49:54.071 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:49:54.086 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:50:24.034 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B1X
2025-06-17 11:50:24.043 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:50:24.046 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 11:50:24.058 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B1X
2025-06-17 11:50:24.066 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 11:50:24.078 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750135824068_ee0d88f3.jpg
2025-06-17 11:50:24.086 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        payments
        (amount, created_at, parking_ticket_id, payment_method, payment_time, reference_number, status) 
    values
        (?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 11:50:24.157 [http-nio-8081-exec-10] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Generate invoice untuk ticket ID: 12
2025-06-17 11:50:24.193 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ir1_0.id,
        ir1_0.base_amount,
        ir1_0.check_in_time,
        ir1_0.check_out_time,
        ir1_0.created_at,
        ir1_0.discount_amount,
        ir1_0.duration_minutes,
        ir1_0.invoice_date,
        ir1_0.invoice_number,
        ir1_0.member_name,
        ir1_0.operator_name,
        ir1_0.parking_ticket_id,
        ir1_0.payment_method,
        ir1_0.payment_reference,
        ir1_0.plate_number,
        ir1_0.status,
        ir1_0.total_amount,
        ir1_0.voucher_code 
    from
        invoice_receipts ir1_0 
    where
        ir1_0.invoice_date between ? and ?
2025-06-17 11:50:24.216 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_receipts
        (base_amount, check_in_time, check_out_time, created_at, discount_amount, duration_minutes, invoice_date, invoice_number, member_name, operator_name, parking_ticket_id, payment_method, payment_reference, plate_number, status, total_amount, voucher_code) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 11:50:24.238 [http-nio-8081-exec-10] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Invoice INV-202506170004 berhasil dibuat
2025-06-17 11:50:24.249 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Check-out berhasil dengan invoice: INV-202506170004
2025-06-17 11:50:24.253 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        parking_tickets 
    set
        check_in_gate=?,
        check_in_operator=?,
        check_in_photo_path=?,
        check_in_time=?,
        check_out_gate=?,
        check_out_operator=?,
        check_out_photo_path=?,
        check_out_time=?,
        member_id=?,
        member_name=?,
        parking_fee=?,
        plate_number=?,
        status=?,
        updated_at=?,
        vehicle_type=? 
    where
        id=?
2025-06-17 12:03:23.058 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 2808 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 12:03:23.060 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 12:03:23.061 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 12:03:24.804 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 12:03:24.807 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 12:03:25.000 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 184 ms. Found 5 JPA repository interfaces.
2025-06-17 12:03:25.019 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 12:03:25.021 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 12:03:25.044 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 12:03:25.044 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 12:03:25.045 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 12:03:25.045 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 12:03:25.045 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 12:03:25.045 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-06-17 12:03:26.000 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 12:03:26.014 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 12:03:26.015 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 12:03:26.087 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 12:03:26.088 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2948 ms
2025-06-17 12:03:26.576 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 12:03:26.919 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@103478b8
2025-06-17 12:03:26.920 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 12:03:26.964 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 12:03:27.055 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.058s)
2025-06-17 12:03:27.130 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 12:03:27.139 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 12:03:27.331 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 12:03:27.426 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 12:03:27.476 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 12:03:27.877 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 12:03:27.945 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 12:03:29.422 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 12:03:29.490 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 12:03:29.909 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 12:03:32.421 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 12:03:32.557 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 12:03:33.226 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 12:03:34.369 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 12:03:34.393 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 12.025 seconds (process running for 12.83)
2025-06-17 12:03:34.512 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 12:04:11.876 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 12:04:11.881 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 12:04:11.909 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 28 ms
2025-06-17 12:04:12.456 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 12:04:12.580 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 12:04:12.599 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 12:04:12.606 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 12:04:12.612 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 12:04:12.621 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:04:12.641 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 12:04:12.642 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:04:12.700 [http-nio-8081-exec-2] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-06-17 12:37:41.129 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 12:37:41.132 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 12:37:41.133 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 12:37:41.133 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 12:37:41.170 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 12:37:41.329 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:37:41.334 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:37:41.336 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:37:41.340 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 3 tickets
2025-06-17 12:38:06.801 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B2X
2025-06-17 12:38:06.831 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:38:06.925 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750138686844_27a658aa.jpg
2025-06-17 12:38:06.929 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 12:38:06.978 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 12:38:07.039 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 13
2025-06-17 12:38:07.039 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 13, photoPath: checkin/2025/06/17/checkin_1750138686844_27a658aa.jpg
2025-06-17 12:38:07.041 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750138686844_27a658aa.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750138686844_27a658aa.jpg
2025-06-17 12:38:16.103 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:38:16.106 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:38:16.110 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:38:16.116 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 13, photoPath: checkin/2025/06/17/checkin_1750138686844_27a658aa.jpg
2025-06-17 12:38:16.117 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750138686844_27a658aa.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750138686844_27a658aa.jpg
2025-06-17 12:38:16.226 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 12:38:16.228 [http-nio-8081-exec-2] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo: ./uploads/checkin/2025/06/17/checkin_1750138686844_27a658aa.jpg
2025-06-17 12:38:16.229 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:38:16.231 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:38:16.232 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.controller.PhotoController - Successfully serving photo: ./uploads/checkin/2025/06/17/checkin_1750138686844_27a658aa.jpg
2025-06-17 12:38:16.718 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 12:38:16.720 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:38:16.721 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:38:23.341 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 12:38:23.348 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:38:23.367 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:38:44.103 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 12:38:44.136 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:38:44.142 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:39:17.830 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 12:39:17.836 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:39:17.839 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:39:18.325 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 12:39:18.328 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:39:18.330 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:39:36.650 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 12:39:36.660 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:39:36.663 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:40:09.637 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B2X
2025-06-17 12:40:09.641 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:09.654 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:40:09.658 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 12:40:09.661 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:09.671 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750138809664_89099f3d.jpg
2025-06-17 12:40:09.704 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        payments
        (amount, created_at, parking_ticket_id, payment_method, payment_time, reference_number, status) 
    values
        (?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 12:40:09.774 [http-nio-8081-exec-7] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Generate invoice untuk ticket ID: 13
2025-06-17 12:40:09.810 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        ir1_0.id,
        ir1_0.base_amount,
        ir1_0.check_in_time,
        ir1_0.check_out_time,
        ir1_0.created_at,
        ir1_0.discount_amount,
        ir1_0.duration_minutes,
        ir1_0.invoice_date,
        ir1_0.invoice_number,
        ir1_0.member_name,
        ir1_0.operator_name,
        ir1_0.parking_ticket_id,
        ir1_0.payment_method,
        ir1_0.payment_reference,
        ir1_0.plate_number,
        ir1_0.status,
        ir1_0.total_amount,
        ir1_0.voucher_code 
    from
        invoice_receipts ir1_0 
    where
        ir1_0.invoice_date between ? and ?
2025-06-17 12:40:09.864 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_receipts
        (base_amount, check_in_time, check_out_time, created_at, discount_amount, duration_minutes, invoice_date, invoice_number, member_name, operator_name, parking_ticket_id, payment_method, payment_reference, plate_number, status, total_amount, voucher_code) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 12:40:09.880 [http-nio-8081-exec-7] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Invoice INV-202506170005 berhasil dibuat
2025-06-17 12:40:09.903 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Check-out berhasil dengan invoice: INV-202506170005
2025-06-17 12:40:09.947 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        parking_tickets 
    set
        check_in_gate=?,
        check_in_operator=?,
        check_in_photo_path=?,
        check_in_time=?,
        check_out_gate=?,
        check_out_operator=?,
        check_out_photo_path=?,
        check_out_time=?,
        member_id=?,
        member_name=?,
        parking_fee=?,
        plate_number=?,
        status=?,
        updated_at=?,
        vehicle_type=? 
    where
        id=?
2025-06-17 12:40:29.704 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 12:40:29.707 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:29.743 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:40:29.748 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:29.798 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:40:29.798 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:40:30.840 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 12:40:30.844 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:30.847 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:40:30.848 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:40:30.854 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:30.859 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:40:32.868 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 12:40:32.874 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:40:32.876 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:32.876 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:32.879 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:40:32.879 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:40:33.398 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:40:33.404 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:33.407 [http-nio-8081-exec-3] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:40:34.424 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:40:34.427 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:34.432 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:40:36.451 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:40:36.453 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:36.456 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:40:52.008 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:40:52.011 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:52.017 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:40:54.494 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:40:54.507 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:54.511 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:40:56.542 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:40:56.547 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:40:56.549 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:41:16.270 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:41:16.275 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:41:16.306 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:41:17.421 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:41:17.423 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:41:17.432 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:41:19.473 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:41:19.475 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:41:19.478 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:41:27.079 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:41:27.085 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:41:27.088 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:41:28.307 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:41:28.310 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:41:28.312 [http-nio-8081-exec-3] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:41:30.334 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:41:30.337 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:41:30.339 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:41:41.346 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:41:41.352 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:41:41.358 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:41:42.375 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:41:42.382 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:41:42.388 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:41:47.820 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:41:47.824 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:41:47.828 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:41:48.471 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:41:48.480 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:41:48.482 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:41:49.729 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:41:49.740 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:41:49.746 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:41:51.766 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:41:51.767 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:41:51.769 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:42:05.689 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:42:05.692 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:42:05.695 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:42:06.709 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:42:06.713 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:42:06.717 [http-nio-8081-exec-3] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:42:08.738 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:42:08.761 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:42:08.766 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:42:13.026 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:42:13.033 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:42:13.039 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:42:14.059 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:42:14.064 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:42:14.069 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:42:16.082 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 12:42:16.083 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:42:16.088 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 12:42:26.075 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 12:42:26.156 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 12:42:26.173 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 12:42:26.176 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 12:42:26.179 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 12:42:26.182 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:42:26.191 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 12:42:26.192 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:42:45.627 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B9012GHI
2025-06-17 12:42:45.636 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:42:45.646 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750138965641_b32dec9b.jpg
2025-06-17 12:42:45.650 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 12:42:45.663 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 12:42:45.680 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 14
2025-06-17 12:42:45.680 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 14, photoPath: checkin/2025/06/17/checkin_1750138965641_b32dec9b.jpg
2025-06-17 12:42:45.682 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750138965641_b32dec9b.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750138965641_b32dec9b.jpg
2025-06-17 12:42:56.722 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B9012GHI
2025-06-17 12:42:56.725 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:42:56.755 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:42:56.758 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 14, photoPath: checkin/2025/06/17/checkin_1750138965641_b32dec9b.jpg
2025-06-17 12:42:56.758 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750138965641_b32dec9b.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750138965641_b32dec9b.jpg
2025-06-17 12:42:56.856 [http-nio-8081-exec-3] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo: ./uploads/checkin/2025/06/17/checkin_1750138965641_b32dec9b.jpg
2025-06-17 12:42:56.857 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B9012GHI
2025-06-17 12:42:56.860 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:42:56.861 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.controller.PhotoController - Successfully serving photo: ./uploads/checkin/2025/06/17/checkin_1750138965641_b32dec9b.jpg
2025-06-17 12:42:56.862 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:42:57.355 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B9012GHI
2025-06-17 12:42:57.358 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:42:57.359 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:43:23.703 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B9012GHI
2025-06-17 12:43:23.718 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:43:23.726 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:43:23.728 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B9012GHI
2025-06-17 12:43:23.730 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 12:43:23.735 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750139003732_c300014a.jpg
2025-06-17 12:43:23.741 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        payments
        (amount, created_at, parking_ticket_id, payment_method, payment_time, reference_number, status) 
    values
        (?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 12:43:23.753 [http-nio-8081-exec-7] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Generate invoice untuk ticket ID: 14
2025-06-17 12:43:23.758 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        ir1_0.id,
        ir1_0.base_amount,
        ir1_0.check_in_time,
        ir1_0.check_out_time,
        ir1_0.created_at,
        ir1_0.discount_amount,
        ir1_0.duration_minutes,
        ir1_0.invoice_date,
        ir1_0.invoice_number,
        ir1_0.member_name,
        ir1_0.operator_name,
        ir1_0.parking_ticket_id,
        ir1_0.payment_method,
        ir1_0.payment_reference,
        ir1_0.plate_number,
        ir1_0.status,
        ir1_0.total_amount,
        ir1_0.voucher_code 
    from
        invoice_receipts ir1_0 
    where
        ir1_0.invoice_date between ? and ?
2025-06-17 12:43:23.778 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_receipts
        (base_amount, check_in_time, check_out_time, created_at, discount_amount, duration_minutes, invoice_date, invoice_number, member_name, operator_name, parking_ticket_id, payment_method, payment_reference, plate_number, status, total_amount, voucher_code) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 12:43:23.788 [http-nio-8081-exec-7] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Invoice INV-202506170006 berhasil dibuat
2025-06-17 12:43:23.792 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Check-out berhasil dengan invoice: INV-202506170006
2025-06-17 12:43:23.797 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        parking_tickets 
    set
        check_in_gate=?,
        check_in_operator=?,
        check_in_photo_path=?,
        check_in_time=?,
        check_out_gate=?,
        check_out_operator=?,
        check_out_photo_path=?,
        check_out_time=?,
        member_id=?,
        member_name=?,
        parking_fee=?,
        plate_number=?,
        status=?,
        updated_at=?,
        vehicle_type=? 
    where
        id=?
2025-06-17 12:43:52.888 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 12:43:52.890 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 12:43:52.890 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 12:43:52.890 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 12:43:52.897 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 12:43:52.904 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:43:52.907 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:43:52.913 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:43:52.916 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:43:52.919 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:43:52.921 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 12:44:02.027 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 12:44:02.028 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 12:44:02.028 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 12:44:02.028 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 12:44:02.041 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 12:44:02.044 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:44:02.065 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:44:02.080 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:44:02.083 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:44:02.086 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:44:02.093 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 12:44:55.729 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 12:44:55.732 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 12:44:55.732 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 12:44:55.732 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 12:44:55.756 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 12:44:55.781 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:44:55.790 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:44:55.795 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:44:55.797 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:44:55.800 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 12:44:55.803 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 13:28:44.300 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 13:28:44.576 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:28:44.588 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:28:44.603 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:28:44.606 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:28:44.609 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:28:44.609 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:28:44.615 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:28:44.622 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:36:31.163 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 13:36:31.304 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:36:31.329 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:36:31.459 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:36:31.464 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:36:31.470 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:36:31.474 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:36:31.503 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:36:31.505 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:36:36.246 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 13:36:36.311 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:36:36.314 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:36:36.374 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:36:36.397 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:36:36.417 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:36:36.420 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:36:36.428 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:36:36.435 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:37:14.675 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 13:37:14.700 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:14.701 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:37:14.705 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:14.707 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:14.715 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:14.716 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:37:14.721 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:14.722 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:37:15.814 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 13:37:15.830 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:15.832 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:37:15.963 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:15.967 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:15.975 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:15.977 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:37:15.981 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:15.982 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:37:22.041 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active=true 
        and (
            lower(m1_0.name) like lower(('%'||?||'%')) escape '' 
            or lower(m1_0.vehicle_plate_number) like lower(('%'||?||'%')) escape ''
        ) 
    fetch
        first ? rows only
2025-06-17 13:37:22.060 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:22.061 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:37:47.088 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 13:37:47.108 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:47.110 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:37:47.117 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:47.120 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:47.124 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:47.125 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:37:47.131 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:47.135 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:37:52.124 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 13:37:52.168 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:52.170 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:37:52.180 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:52.198 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:52.216 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:52.219 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:37:52.227 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:37:52.229 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:38:03.103 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 13:38:03.149 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:38:03.152 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:38:03.157 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:38:03.161 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:38:03.166 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:38:03.168 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:38:03.174 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:38:03.176 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:39:13.552 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 13:39:13.577 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:39:13.579 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:39:13.587 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:39:13.590 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:39:13.594 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:39:13.596 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:39:13.600 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:39:13.602 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:39:26.821 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 13:39:26.834 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 13:39:26.836 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 13:39:26.840 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 13:39:26.863 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 13:39:26.932 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:39:26.937 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:39:26.939 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:39:26.940 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:39:26.946 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:39:26.950 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 13:53:47.064 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 13:53:47.073 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 13:53:47.074 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 13:53:47.075 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 13:53:47.171 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 13:53:47.283 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:53:47.292 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:53:47.294 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:53:47.297 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:53:47.301 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:53:47.303 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 13:56:33.201 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 13:56:33.205 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 13:56:33.208 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 13:56:33.209 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 13:56:33.305 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 13:56:33.365 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:56:33.551 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:56:33.569 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:56:33.577 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:56:33.589 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:56:33.597 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 13:56:39.807 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 13:56:39.808 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 13:56:39.809 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 13:56:39.809 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 13:56:39.815 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 13:56:39.825 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:56:39.829 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:56:39.833 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:56:39.835 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:56:39.845 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:56:39.847 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 13:57:17.616 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 13:57:17.621 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 13:57:17.621 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 13:57:17.622 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 13:57:17.632 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 13:57:17.634 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:57:17.639 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:57:17.640 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:57:17.642 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:57:17.648 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:57:17.652 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 13:57:31.827 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 13:57:31.857 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:57:31.879 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:57:31.885 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:57:31.890 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:57:31.892 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:57:31.893 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:57:31.897 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:57:31.898 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:58:22.737 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 13:58:22.766 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:58:22.773 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:58:22.795 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:58:22.844 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:58:22.862 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:58:22.876 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:58:22.882 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:58:22.883 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:59:21.170 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 13:59:21.177 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 13:59:21.177 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 13:59:21.178 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 13:59:21.247 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 13:59:21.398 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:59:21.408 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:59:21.411 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:59:21.424 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:59:21.446 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:59:21.450 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 13:59:22.880 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 13:59:22.969 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 13:59:24.663 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 13:59:24.677 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:59:24.678 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:59:24.684 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:59:24.687 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:59:24.694 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:59:24.699 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 13:59:24.706 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 13:59:24.710 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:01:03.036 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 14:01:03.098 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 14:01:08.053 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 14:01:08.056 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 14:01:53.762 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 14:01:53.791 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 14:01:55.546 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 14:01:55.572 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:01:55.629 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:01:55.662 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:01:55.666 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:01:55.681 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:01:55.682 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:01:55.694 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:01:55.696 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:02:55.589 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 14:02:55.592 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 14:02:58.267 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 14:02:58.267 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 14:02:58.267 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 14:02:58.267 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 14:02:58.272 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 14:02:58.297 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:02:58.302 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:02:58.304 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:02:59.106 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:02:59.158 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:02:59.160 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 14:03:38.364 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 14:03:38.376 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:03:38.379 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:03:38.385 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:03:38.390 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:03:38.394 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:03:38.395 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:03:38.400 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:03:38.402 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:04:22.114 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 14:04:22.141 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 14:09:01.894 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 14:09:02.086 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 14:09:40.118 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 14:09:40.142 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 14:09:45.536 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 14:09:45.537 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 14:09:45.537 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 14:09:45.538 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 14:09:45.571 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 14:09:45.576 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:09:45.578 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:09:45.579 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:09:45.581 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:09:45.591 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:09:45.593 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 14:10:06.275 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 14:10:06.333 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:10:06.371 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:10:06.395 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:10:06.415 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:10:06.433 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:10:06.435 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:10:06.446 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:10:06.449 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:10:08.306 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 14:10:08.312 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 14:10:10.579 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 14:10:10.580 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 14:10:10.580 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 14:10:10.580 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 14:10:10.596 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 14:10:10.637 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:10:10.684 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:10:10.695 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:10:10.719 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:10:10.725 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:10:10.727 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 14:15:11.391 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 14:15:11.397 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 14:15:11.416 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 14:15:11.416 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 14:15:11.511 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 14:15:11.591 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:15:11.612 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:15:11.627 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:15:11.643 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:15:11.647 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:15:11.650 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 14:16:43.332 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B2453DJR
2025-06-17 14:16:43.403 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 14:16:43.482 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750144603445_370a57d4.jpg
2025-06-17 14:16:43.489 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 14:16:43.636 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 14:16:43.750 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 15
2025-06-17 14:16:43.754 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 15, photoPath: checkin/2025/06/17/checkin_1750144603445_370a57d4.jpg
2025-06-17 14:16:43.755 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750144603445_370a57d4.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750144603445_370a57d4.jpg
2025-06-17 14:16:58.396 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 14:16:58.427 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:16:58.439 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:16:58.447 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:16:58.453 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:16:58.457 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:16:58.460 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:16:58.484 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:16:58.486 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:17:02.346 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 14:17:02.346 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 14:17:02.346 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 14:17:02.346 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 14:17:02.351 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 14:17:02.354 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:17:02.356 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:17:02.360 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:17:02.362 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:17:02.364 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:17:02.382 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:17:02.388 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 6 tickets
2025-06-17 14:17:13.635 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'd', date: 2025-06-17, status: 'null'
2025-06-17 14:17:13.637 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'D', date: 2025-06-17, status: null
2025-06-17 14:17:13.637 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=D, date=2025-06-17
2025-06-17 14:17:13.774 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 14:17:13.788 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 14:17:13.788 [http-nio-8081-exec-7] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 14:17:15.344 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'dj', date: 2025-06-17, status: 'null'
2025-06-17 14:17:15.344 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'DJ', date: 2025-06-17, status: null
2025-06-17 14:17:15.344 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=DJ, date=2025-06-17
2025-06-17 14:17:15.345 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 14:17:15.347 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 14:17:15.347 [http-nio-8081-exec-5] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 14:17:15.702 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'djr', date: 2025-06-17, status: 'null'
2025-06-17 14:17:15.702 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'DJR', date: 2025-06-17, status: null
2025-06-17 14:17:15.702 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=DJR, date=2025-06-17
2025-06-17 14:17:15.704 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 14:17:15.706 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 14:17:15.706 [http-nio-8081-exec-9] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 14:17:56.850 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 14:17:56.868 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 14:17:56.875 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750144676869_4990f38f.jpg
2025-06-17 14:17:56.881 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 14:17:56.886 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 14:17:56.900 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 16
2025-06-17 14:17:56.901 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 16, photoPath: checkin/2025/06/17/checkin_1750144676869_4990f38f.jpg
2025-06-17 14:17:56.901 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750144676869_4990f38f.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750144676869_4990f38f.jpg
2025-06-17 14:18:02.000 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 14:18:02.014 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:18:02.016 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:18:02.027 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:18:02.036 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:18:02.043 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:18:02.048 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:18:02.065 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:18:02.067 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:18:06.721 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 14:18:06.725 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 14:18:16.597 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 14:18:16.598 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 14:18:16.599 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 14:18:16.599 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 14:18:16.615 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 14:18:16.618 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:18:16.620 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:18:16.623 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:18:16.625 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:18:16.627 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:18:16.631 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:18:16.635 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:18:16.637 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 7 tickets
2025-06-17 14:19:31.725 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 14:19:31.728 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 14:19:31.729 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 14:19:31.730 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 14:19:31.787 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 14:19:31.865 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:19:31.970 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:19:32.150 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:19:32.210 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:19:32.238 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:19:32.244 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:19:32.246 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:19:32.248 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 7 tickets
2025-06-17 14:20:34.178 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 14:20:34.180 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 14:20:34.181 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 14:20:34.182 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 14:20:34.217 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 14:20:34.228 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:20:34.233 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:20:34.236 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:20:34.238 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:20:34.240 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:20:34.242 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:20:34.243 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:20:34.245 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 7 tickets
2025-06-17 14:21:36.474 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 14:21:36.476 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 14:21:36.476 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 14:21:36.476 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 14:21:36.509 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 14:21:36.936 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:21:37.068 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:21:37.096 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:21:37.099 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:21:37.103 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:21:37.128 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:21:37.133 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:21:37.142 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 7 tickets
2025-06-17 14:22:15.218 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 14:22:15.236 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:22:15.274 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:22:15.282 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:22:15.289 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:22:15.296 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:22:15.310 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:22:15.323 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:22:15.327 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:23:16.642 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 14:23:17.193 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:23:17.217 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:23:17.235 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:23:17.244 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:23:17.261 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:23:17.264 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:23:17.275 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:23:17.278 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:23:20.695 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 14:23:20.695 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 14:23:20.695 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 14:23:20.697 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 14:23:20.707 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 14:23:20.714 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:23:20.737 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:23:20.741 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:23:20.752 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:23:20.806 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:23:20.811 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:23:20.814 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:23:20.818 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 7 tickets
2025-06-17 14:23:51.669 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 14:23:51.683 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 14:24:39.221 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 14:24:39.229 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 14:24:39.232 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 14:24:39.233 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 14:24:39.283 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 14:24:39.319 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:24:39.374 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:24:39.432 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:24:39.435 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:24:39.464 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:24:39.485 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:24:39.490 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:24:39.496 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 7 tickets
2025-06-17 14:24:46.722 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 14:24:46.743 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:24:46.745 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:24:46.757 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:24:46.766 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:24:46.770 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:24:46.771 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:24:46.783 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 14:24:46.786 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:25:19.756 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 14:25:19.770 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 14:30:00.865 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Getting dashboard statistics from null to null
2025-06-17 14:30:00.873 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Today: 2025-06-17, range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 14:30:00.899 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:00.923 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:00.927 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:00.929 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:00.929 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:00.932 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:00.933 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:00.934 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:01.028 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(pt1_0.id) 
    from
        parking_tickets pt1_0 
    where
        pt1_0.status=?
2025-06-17 14:30:01.082 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.095 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.132 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.payment_method,
        count(p1_0.id),
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.payment_time between ? and ? 
        and p1_0.status='SUCCESS' 
    group by
        p1_0.payment_method
2025-06-17 14:30:01.150 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.154 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:01.155 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:01.157 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:01.157 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:01.158 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:01.159 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:01.160 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:01.161 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:01.162 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 14:30:01.210 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.216 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-18T00:00 to 2025-05-18T23:59:59
2025-06-17 14:30:01.217 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.222 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.227 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.228 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-19T00:00 to 2025-05-19T23:59:59
2025-06-17 14:30:01.230 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.231 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.237 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.238 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-20T00:00 to 2025-05-20T23:59:59
2025-06-17 14:30:01.240 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.241 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.244 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.246 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-21T00:00 to 2025-05-21T23:59:59
2025-06-17 14:30:01.248 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.250 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.254 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.255 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-22T00:00 to 2025-05-22T23:59:59
2025-06-17 14:30:01.257 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.258 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.259 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.262 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-23T00:00 to 2025-05-23T23:59:59
2025-06-17 14:30:01.264 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.265 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.268 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.269 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-24T00:00 to 2025-05-24T23:59:59
2025-06-17 14:30:01.272 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.273 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.276 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.279 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-25T00:00 to 2025-05-25T23:59:59
2025-06-17 14:30:01.281 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.283 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.287 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.287 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-26T00:00 to 2025-05-26T23:59:59
2025-06-17 14:30:01.289 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.289 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.291 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.293 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-27T00:00 to 2025-05-27T23:59:59
2025-06-17 14:30:01.296 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.299 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.301 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.302 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-28T00:00 to 2025-05-28T23:59:59
2025-06-17 14:30:01.304 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.306 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.314 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.321 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-29T00:00 to 2025-05-29T23:59:59
2025-06-17 14:30:01.324 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.325 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.329 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.331 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-30T00:00 to 2025-05-30T23:59:59
2025-06-17 14:30:01.334 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.337 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.343 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.344 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-05-31T00:00 to 2025-05-31T23:59:59
2025-06-17 14:30:01.345 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.346 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.350 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.352 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-01T00:00 to 2025-06-01T23:59:59
2025-06-17 14:30:01.355 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.356 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.358 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.359 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-02T00:00 to 2025-06-02T23:59:59
2025-06-17 14:30:01.361 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.364 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.374 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.375 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-03T00:00 to 2025-06-03T23:59:59
2025-06-17 14:30:01.378 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.378 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.385 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.387 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-04T00:00 to 2025-06-04T23:59:59
2025-06-17 14:30:01.388 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.389 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.392 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.393 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-05T00:00 to 2025-06-05T23:59:59
2025-06-17 14:30:01.394 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.396 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.401 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.404 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-06T00:00 to 2025-06-06T23:59:59
2025-06-17 14:30:01.405 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.406 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.409 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.410 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-07T00:00 to 2025-06-07T23:59:59
2025-06-17 14:30:01.412 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.414 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.423 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.426 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-08T00:00 to 2025-06-08T23:59:59
2025-06-17 14:30:01.429 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.433 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.442 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.443 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-09T00:00 to 2025-06-09T23:59:59
2025-06-17 14:30:01.445 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.445 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.452 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.453 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-10T00:00 to 2025-06-10T23:59:59
2025-06-17 14:30:01.456 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.456 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.459 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.460 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-11T00:00 to 2025-06-11T23:59:59
2025-06-17 14:30:01.461 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.462 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.466 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.468 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-12T00:00 to 2025-06-12T23:59:59
2025-06-17 14:30:01.469 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.472 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.482 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.500 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-13T00:00 to 2025-06-13T23:59:59
2025-06-17 14:30:01.502 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.513 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.519 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.524 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-14T00:00 to 2025-06-14T23:59:59
2025-06-17 14:30:01.538 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.540 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 54300.00
2025-06-17 14:30:01.557 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.559 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-15T00:00 to 2025-06-15T23:59:59
2025-06-17 14:30:01.560 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.561 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.563 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.563 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-16T00:00 to 2025-06-16T23:59:59
2025-06-17 14:30:01.566 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.568 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 0
2025-06-17 14:30:01.571 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ?
2025-06-17 14:30:01.574 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Calculating revenue from 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 14:30:01.576 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        sum(p1_0.amount) 
    from
        payments p1_0 
    where
        p1_0.status='SUCCESS' 
        and p1_0.payment_time between ? and ?
2025-06-17 14:30:01.577 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Revenue calculated: 51000.00
2025-06-17 14:30:01.580 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 14:30:01.599 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.id) 
    from
        members m1_0 
    where
        m1_0.active
2025-06-17 14:30:01.609 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.DashboardService - Statistics calculated - Today: 7 vehicles, 51000.00 revenue
2025-06-17 14:46:29.107 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 14:46:29.153 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 14:46:29.170 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 15:07:05.192 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 12588 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 15:07:05.193 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 15:07:05.194 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 15:07:06.508 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 15:07:06.511 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 15:07:06.754 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 234 ms. Found 5 JPA repository interfaces.
2025-06-17 15:07:06.774 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 15:07:06.776 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 15:07:06.797 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:07:06.797 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:07:06.797 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:07:06.798 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:07:06.798 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:07:06.798 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-06-17 15:07:07.743 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 15:07:07.766 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 15:07:07.767 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 15:07:07.833 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 15:07:07.833 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2576 ms
2025-06-17 15:07:08.764 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 15:07:09.147 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4a5fab78
2025-06-17 15:07:09.148 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 15:07:09.204 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 15:07:09.293 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.049s)
2025-06-17 15:07:09.309 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 15:07:09.313 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 15:07:09.446 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 15:07:09.513 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 15:07:09.577 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 15:07:10.049 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 15:07:10.209 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 15:07:11.877 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 15:07:11.964 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 15:07:12.765 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 15:07:15.422 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 15:07:15.542 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 15:07:15.983 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 15:07:16.786 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 15:07:16.803 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 12.303 seconds (process running for 12.83)
2025-06-17 15:07:17.064 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 15:07:28.379 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 15:07:28.379 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 15:07:28.381 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-06-17 15:07:29.587 [http-nio-8081-exec-2] INFO  org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 531 ms
2025-06-17 15:12:10.221 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 15:12:10.245 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 15:12:10.257 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 15:12:13.845 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 12827 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 15:12:13.847 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 15:12:13.849 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 15:12:15.243 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 15:12:15.246 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 15:12:15.420 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 166 ms. Found 5 JPA repository interfaces.
2025-06-17 15:12:15.439 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 15:12:15.440 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 15:12:15.464 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:12:15.464 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:12:15.465 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:12:15.465 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:12:15.466 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:12:15.466 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-06-17 15:12:16.403 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 15:12:16.417 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 15:12:16.418 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 15:12:16.481 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 15:12:16.481 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2574 ms
2025-06-17 15:12:17.068 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 15:12:17.256 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@77a85e76
2025-06-17 15:12:17.258 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 15:12:17.292 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 15:12:17.344 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.031s)
2025-06-17 15:12:17.406 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 15:12:17.409 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 15:12:17.521 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 15:12:17.586 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 15:12:17.626 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 15:12:17.944 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 15:12:17.997 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 15:12:19.236 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 15:12:19.280 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 15:12:19.983 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 15:12:22.151 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 15:12:22.329 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 15:12:22.822 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 15:12:23.652 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 15:12:23.690 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 10.61 seconds (process running for 11.357)
2025-06-17 15:12:23.816 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 15:12:23.838 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 15:12:23.864 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 15:14:13.056 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 12888 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 15:14:13.058 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 15:14:13.059 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 15:14:14.511 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 15:14:14.514 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 15:14:14.691 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 167 ms. Found 5 JPA repository interfaces.
2025-06-17 15:14:14.710 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 15:14:14.711 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 15:14:14.736 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:14:14.736 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:14:14.737 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:14:14.737 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:14:14.738 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 15:14:14.738 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-06-17 15:14:15.729 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 15:14:15.744 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 15:14:15.745 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 15:14:15.814 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 15:14:15.814 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2681 ms
2025-06-17 15:14:16.302 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 15:14:16.488 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@731ab49b
2025-06-17 15:14:16.489 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 15:14:16.524 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 15:14:16.579 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.025s)
2025-06-17 15:14:16.635 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 15:14:16.637 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 15:14:16.754 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 15:14:16.833 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 15:14:16.877 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 15:14:17.228 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 15:14:17.287 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 15:14:18.412 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 15:14:18.453 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 15:14:19.231 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 15:14:20.743 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 15:14:20.848 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 15:14:21.293 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 15:14:22.122 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 15:14:22.138 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 9.84 seconds (process running for 10.442)
2025-06-17 15:14:22.342 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 15:16:18.957 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 15:16:18.961 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 15:16:19.020 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 58 ms
2025-06-17 15:16:37.231 [http-nio-8081-exec-4] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing login for email: bilawalfr@gmail.com
2025-06-17 15:16:37.232 [http-nio-8081-exec-4] WARN  com.parkee.parkingpos.controller.AuthController - Authentication failed for email: bilawalfr@gmail.com - User dengan email bilawalfr@gmail.com tidak ditemukan
2025-06-17 15:17:23.519 [http-nio-8081-exec-6] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing login for email: admin@parkee.com
2025-06-17 15:17:24.774 [http-nio-8081-exec-6] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - User admin@parkee.com logged in successfully
2025-06-17 15:21:39.460 [http-nio-8081-exec-4] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing logout
2025-06-17 15:21:39.552 [http-nio-8081-exec-4] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - User admin@parkee.com logged out successfully
2025-06-17 15:35:03.347 [http-nio-8081-exec-6] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing login for email: admin@parkee.com
2025-06-17 15:35:03.483 [http-nio-8081-exec-6] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - User admin@parkee.com logged in successfully
2025-06-17 15:35:21.584 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 15:35:22.034 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 15:35:22.049 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 15:35:22.243 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 15:35:22.249 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 15:35:22.253 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 15:35:22.254 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 15:35:22.265 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 15:35:22.271 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 15:35:22.301 [http-nio-8081-exec-9] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-06-17 15:35:42.970 [http-nio-8081-exec-2] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing logout
2025-06-17 15:35:43.046 [http-nio-8081-exec-2] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - User admin@parkee.com logged out successfully
2025-06-17 15:38:36.444 [http-nio-8081-exec-6] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing login for email: admin@parkee.com
2025-06-17 15:38:36.484 [http-nio-8081-exec-6] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - User admin@parkee.com logged in successfully
2025-06-17 15:38:38.889 [http-nio-8081-exec-7] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing logout
2025-06-17 15:38:38.934 [http-nio-8081-exec-7] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - User admin@parkee.com logged out successfully
2025-06-17 15:42:49.477 [http-nio-8081-exec-5] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing login for email: admin@parkee.com
2025-06-17 15:42:49.520 [http-nio-8081-exec-5] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - User admin@parkee.com logged in successfully
2025-06-17 15:42:56.322 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 15:42:56.323 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 15:42:56.323 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 15:42:56.324 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 15:42:56.386 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 15:42:56.540 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 15:42:56.545 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 15:42:56.571 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 15:42:56.589 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 15:42:56.641 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 15:42:56.654 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 15:42:56.656 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 15:42:56.659 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 7 tickets
2025-06-17 15:42:59.524 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.active 
    fetch
        first ? rows only
2025-06-17 15:42:59.545 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 15:42:59.558 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 15:42:59.570 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 15:42:59.578 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 15:42:59.581 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 15:42:59.583 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 15:42:59.592 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number like ? escape '\'
2025-06-17 15:42:59.593 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 15:43:05.893 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.VoucherService - Get vouchers, activeOnly: true
2025-06-17 15:43:06.029 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.active,
        v1_0.code,
        v1_0.created_at,
        v1_0.description,
        v1_0.discount_type,
        v1_0.discount_value,
        v1_0.minimum_amount,
        v1_0.terminated_at,
        v1_0.usage_count,
        v1_0.usage_limit,
        v1_0.valid_from,
        v1_0.valid_until 
    from
        vouchers v1_0 
    where
        v1_0.active=true 
        and v1_0.valid_from<=? 
        and v1_0.valid_until>=? 
    fetch
        first ? rows only
2025-06-17 15:43:14.370 [http-nio-8081-exec-3] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing logout
2025-06-17 15:43:14.412 [http-nio-8081-exec-3] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - User admin@parkee.com logged out successfully
2025-06-17 15:48:18.127 [http-nio-8081-exec-5] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing login for email: cashier@parkee.com
2025-06-17 15:48:18.171 [http-nio-8081-exec-5] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - User cashier@parkee.com logged in successfully
2025-06-17 15:48:23.279 [http-nio-8081-exec-6] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing logout
2025-06-17 15:48:23.322 [http-nio-8081-exec-6] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - User cashier@parkee.com logged out successfully
2025-06-17 15:48:37.275 [http-nio-8081-exec-7] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing login for email: operator@parkee.com
2025-06-17 15:48:37.285 [http-nio-8081-exec-7] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - User operator@parkee.com logged in successfully
2025-06-17 15:48:39.399 [http-nio-8081-exec-9] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing logout
2025-06-17 15:48:39.424 [http-nio-8081-exec-9] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - User operator@parkee.com logged out successfully
2025-06-17 15:49:37.779 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 15:49:37.805 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 15:49:37.822 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 16:04:53.455 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 16173 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 16:04:53.457 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 16:04:53.458 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 16:04:56.479 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 16:04:56.483 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 16:04:56.892 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 399 ms. Found 5 JPA repository interfaces.
2025-06-17 16:04:56.913 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 16:04:56.914 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 16:04:56.940 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 16:04:56.941 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 16:04:56.941 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 16:04:56.941 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 16:04:56.942 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 16:04:56.942 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-06-17 16:04:58.393 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 16:04:58.436 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 16:04:58.436 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 16:04:58.520 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 16:04:58.521 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4926 ms
2025-06-17 16:04:59.368 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 16:05:02.228 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@55fe9c2f
2025-06-17 16:05:02.233 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 16:05:03.070 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 16:05:03.882 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.158s)
2025-06-17 16:05:03.911 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 16:05:03.916 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 16:05:04.047 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 16:05:04.150 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 16:05:04.205 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 16:05:04.765 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 16:05:04.911 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 16:05:06.381 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 16:05:07.102 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 16:05:08.330 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 16:05:10.358 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 16:05:10.463 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 16:05:10.977 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 16:05:11.928 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 16:05:11.953 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 19.182 seconds (process running for 19.679)
2025-06-17 16:05:11.989 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 16:05:11.992 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 16:05:11.997 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 16:06:07.314 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 16303 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 16:06:07.316 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 16:06:07.317 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 16:06:08.653 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 16:06:08.655 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 16:06:08.847 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 182 ms. Found 5 JPA repository interfaces.
2025-06-17 16:06:08.866 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 16:06:08.868 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 16:06:08.888 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 16:06:08.889 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 16:06:08.889 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 16:06:08.889 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 16:06:08.889 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 16:06:08.889 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-06-17 16:06:09.812 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 16:06:09.826 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 16:06:09.827 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 16:06:09.887 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 16:06:09.887 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2497 ms
2025-06-17 16:06:10.342 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 16:06:10.540 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@611587f7
2025-06-17 16:06:10.542 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 16:06:10.580 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 16:06:10.617 [main] INFO  o.f.c.i.schemahistory.JdbcTableSchemaHistory - Schema history table "public"."flyway_schema_history" does not exist yet
2025-06-17 16:06:10.621 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.020s)
2025-06-17 16:06:10.638 [main] INFO  o.f.c.i.schemahistory.JdbcTableSchemaHistory - Creating Schema History table "public"."flyway_schema_history" ...
2025-06-17 16:06:10.708 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": << Empty Schema >>
2025-06-17 16:06:10.728 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Migrating schema "public" to version "1 - Create tables"
2025-06-17 16:06:10.824 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Successfully applied 1 migration to schema "public", now at version v1 (execution time 00:00.075s)
2025-06-17 16:06:10.946 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 16:06:11.019 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 16:06:11.079 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 16:06:11.397 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 16:06:11.458 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 16:06:12.537 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 16:06:12.572 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 16:06:13.286 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 16:06:14.769 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 16:06:14.865 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 16:06:15.288 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 16:06:16.062 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 16:06:16.079 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 9.449 seconds (process running for 10.029)
2025-06-17 16:06:16.287 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 16:45:33.013 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m21s641ms).
2025-06-17 16:49:38.219 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m5s280ms).
2025-06-17 16:54:35.795 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m27s563ms).
2025-06-17 16:59:30.879 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m55s85ms).
2025-06-17 17:04:47.833 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m46s951ms).
2025-06-17 17:37:06.002 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=32m18s168ms).
2025-06-17 17:46:06.466 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 17:46:06.470 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 17:46:06.517 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 47 ms
2025-06-17 17:46:38.837 [http-nio-8081-exec-2] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - Processing login for email: operator@parkee.com
2025-06-17 17:46:39.954 [http-nio-8081-exec-2] INFO  c.parkee.parkingpos.service.impl.AuthServiceImpl - User operator@parkee.com logged in successfully
2025-06-17 17:47:20.648 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 17:47:20.671 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 17:47:47.809 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B22FRD
2025-06-17 17:47:48.184 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:47:48.309 [http-nio-8081-exec-5] DEBUG com.parkee.parkingpos.util.FileUploadUtil - Created directory: ./uploads/checkin/2025/06/17
2025-06-17 17:47:48.414 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750157268302_d2c1ab20.jpg
2025-06-17 17:47:48.426 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 17:47:48.505 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 17:47:48.779 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 9
2025-06-17 17:47:48.780 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 9, photoPath: checkin/2025/06/17/checkin_1750157268302_d2c1ab20.jpg
2025-06-17 17:47:48.781 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750157268302_d2c1ab20.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750157268302_d2c1ab20.jpg
2025-06-17 17:48:15.393 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B22FRD
2025-06-17 17:48:15.397 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:48:15.414 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:48:15.430 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 9, photoPath: checkin/2025/06/17/checkin_1750157268302_d2c1ab20.jpg
2025-06-17 17:48:15.430 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750157268302_d2c1ab20.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750157268302_d2c1ab20.jpg
2025-06-17 17:48:15.667 [http-nio-8081-exec-9] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo: ./uploads/checkin/2025/06/17/checkin_1750157268302_d2c1ab20.jpg
2025-06-17 17:48:15.671 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:48:15.675 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:48:15.678 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:48:15.694 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.controller.PhotoController - Successfully serving photo: ./uploads/checkin/2025/06/17/checkin_1750157268302_d2c1ab20.jpg
2025-06-17 17:48:16.137 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:48:16.142 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:48:16.144 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:48:54.716 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:48:54.765 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:48:54.778 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:48:57.710 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:48:57.719 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:48:57.722 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:49:26.585 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:49:26.650 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:49:26.667 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:49:42.937 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:49:42.942 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:49:42.960 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:50:06.685 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:50:06.688 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:50:06.698 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:50:18.132 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:50:18.137 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:50:18.140 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:50:19.625 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:50:19.627 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:50:19.629 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:50:23.112 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1284)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-17 17:50:36.624 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:50:36.629 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:50:36.707 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:50:37.126 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:50:37.129 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:50:37.133 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:50:51.722 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:50:51.724 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:50:51.749 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:50:54.387 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:50:54.403 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:50:54.422 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:51:04.677 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:51:04.682 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:51:04.682 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:51:05.796 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:51:05.800 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:51:05.802 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:51:06.678 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:51:06.683 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:51:06.696 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:51:52.638 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:51:52.643 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:51:52.650 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:53:05.673 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:53:05.702 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:53:05.708 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:53:08.466 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:53:08.469 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:53:08.480 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:53:34.119 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:53:34.123 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:53:34.137 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:53:54.197 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:53:54.200 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:53:54.205 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:55:16.049 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:55:16.123 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:55:16.128 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:55:50.379 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:55:50.385 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:55:50.391 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:56:56.601 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:56:56.661 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:56:56.692 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:57:22.043 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B22FRD
2025-06-17 17:57:22.047 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:57:22.053 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:57:22.057 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:57:22.061 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:57:22.070 [http-nio-8081-exec-6] DEBUG com.parkee.parkingpos.util.FileUploadUtil - Created directory: ./uploads/checkout/2025/06/17
2025-06-17 17:57:22.076 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750157842064_4eb1c00e.jpg
2025-06-17 17:57:22.102 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
jakarta.servlet.ServletException: Handler dispatch failed: java.lang.NoClassDefFoundError: com/parkee/parkingpos/service/ParkingService$1
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1104)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: java.lang.NoClassDefFoundError: com/parkee/parkingpos/service/ParkingService$1
	at com.parkee.parkingpos.service.ParkingService.generatePaymentReference(ParkingService.java:450)
	at com.parkee.parkingpos.service.ParkingService.processPayment(ParkingService.java:281)
	at com.parkee.parkingpos.service.ParkingService.checkOut(ParkingService.java:231)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:416)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:551)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:433)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.ParkingService$$SpringCGLIB$$0.checkOut(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.checkOut(ParkingController.java:379)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	... 114 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.parkee.parkingpos.service.ParkingService$1
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	... 147 common frames omitted
2025-06-17 17:58:38.009 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:58:38.068 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:58:38.189 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:59:06.175 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:59:06.262 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:59:06.299 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:59:31.664 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:59:31.669 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:59:31.675 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:59:50.370 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:59:50.378 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:59:50.387 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:59:53.402 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B22FRD
2025-06-17 17:59:53.404 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:59:53.406 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 17:59:53.407 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B22FRD
2025-06-17 17:59:53.409 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 17:59:53.415 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750157993411_47c59c57.jpg
2025-06-17 17:59:53.418 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
jakarta.servlet.ServletException: Handler dispatch failed: java.lang.NoClassDefFoundError: com/parkee/parkingpos/service/ParkingService$1
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1104)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: java.lang.NoClassDefFoundError: com/parkee/parkingpos/service/ParkingService$1
	at com.parkee.parkingpos.service.ParkingService.generatePaymentReference(ParkingService.java:450)
	at com.parkee.parkingpos.service.ParkingService.processPayment(ParkingService.java:281)
	at com.parkee.parkingpos.service.ParkingService.checkOut(ParkingService.java:231)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:416)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:551)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:433)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.parkee.parkingpos.service.ParkingService$$SpringCGLIB$$0.checkOut(<generated>)
	at com.parkee.parkingpos.controller.ParkingController.checkOut(ParkingController.java:379)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	... 114 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.parkee.parkingpos.service.ParkingService$1
	... 147 common frames omitted
2025-06-17 18:00:00.194 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 18:00:00.225 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 18:00:00.237 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 18:12:34.341 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 23679 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 18:12:34.343 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 18:12:34.344 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 18:12:36.452 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 18:12:36.455 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 18:12:36.660 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 194 ms. Found 5 JPA repository interfaces.
2025-06-17 18:12:36.683 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 18:12:36.685 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 18:12:36.708 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:12:36.708 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:12:36.709 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:12:36.709 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:12:36.709 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:12:36.709 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-06-17 18:12:38.256 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 18:12:38.275 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 18:12:38.276 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 18:12:38.586 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 18:12:38.587 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4162 ms
2025-06-17 18:12:40.220 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 18:12:41.059 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@23358740
2025-06-17 18:12:41.061 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 18:12:41.132 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 18:12:41.461 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'flywayInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Validate failed: Migrations have failed validation
Migration checksum mismatch for migration version 1
-> Applied to database : 1938713730
-> Resolved locally    : -1290842034
Either revert the changes to the migration, or run repair to update the schema history.
Need more flexibility with validation rules? Learn more: https://rd.gt/3AbJUZE
2025-06-17 18:12:41.462 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 18:12:41.516 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 18:12:41.527 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-17 18:12:41.563 [main] INFO  o.s.b.a.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-17 18:12:41.689 [main] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'flywayInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Validate failed: Migrations have failed validation
Migration checksum mismatch for migration version 1
-> Applied to database : 1938713730
-> Resolved locally    : -1290842034
Either revert the changes to the migration, or run repair to update the schema history.
Need more flexibility with validation rules? Learn more: https://rd.gt/3AbJUZE
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.parkee.parkingpos.ParkingPosApplication.main(ParkingPosApplication.java:24)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Validate failed: Migrations have failed validation
Migration checksum mismatch for migration version 1
-> Applied to database : 1938713730
-> Resolved locally    : -1290842034
Either revert the changes to the migration, or run repair to update the schema history.
Need more flexibility with validation rules? Learn more: https://rd.gt/3AbJUZE
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	... 10 common frames omitted
Caused by: org.flywaydb.core.api.exception.FlywayValidateException: Validate failed: Migrations have failed validation
Migration checksum mismatch for migration version 1
-> Applied to database : 1938713730
-> Resolved locally    : -1290842034
Either revert the changes to the migration, or run repair to update the schema history.
Need more flexibility with validation rules? Learn more: https://rd.gt/3AbJUZE
	at org.flywaydb.core.Flyway.lambda$migrate$0(Flyway.java:177)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:210)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:164)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 17 common frames omitted
2025-06-17 18:13:06.338 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 23718 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 18:13:06.340 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 18:13:06.341 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 18:13:07.830 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 18:13:07.832 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 18:13:08.112 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 202 ms. Found 5 JPA repository interfaces.
2025-06-17 18:13:08.132 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 18:13:08.134 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 18:13:08.155 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:13:08.155 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:13:08.155 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:13:08.156 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:13:08.156 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:13:08.156 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-06-17 18:13:09.083 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 18:13:09.097 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 18:13:09.097 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 18:13:09.177 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 18:13:09.178 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2776 ms
2025-06-17 18:13:09.645 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 18:13:09.833 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@731ab49b
2025-06-17 18:13:09.834 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 18:13:09.869 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 18:13:09.922 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'flywayInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Validate failed: Migrations have failed validation
Migration checksum mismatch for migration version 1
-> Applied to database : 1938713730
-> Resolved locally    : -1290842034
Either revert the changes to the migration, or run repair to update the schema history.
Need more flexibility with validation rules? Learn more: https://rd.gt/3AbJUZE
2025-06-17 18:13:09.922 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 18:13:09.925 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 18:13:09.928 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-17 18:13:09.944 [main] INFO  o.s.b.a.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-17 18:13:09.961 [main] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'flywayInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Validate failed: Migrations have failed validation
Migration checksum mismatch for migration version 1
-> Applied to database : 1938713730
-> Resolved locally    : -1290842034
Either revert the changes to the migration, or run repair to update the schema history.
Need more flexibility with validation rules? Learn more: https://rd.gt/3AbJUZE
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.parkee.parkingpos.ParkingPosApplication.main(ParkingPosApplication.java:24)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Validate failed: Migrations have failed validation
Migration checksum mismatch for migration version 1
-> Applied to database : 1938713730
-> Resolved locally    : -1290842034
Either revert the changes to the migration, or run repair to update the schema history.
Need more flexibility with validation rules? Learn more: https://rd.gt/3AbJUZE
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	... 10 common frames omitted
Caused by: org.flywaydb.core.api.exception.FlywayValidateException: Validate failed: Migrations have failed validation
Migration checksum mismatch for migration version 1
-> Applied to database : 1938713730
-> Resolved locally    : -1290842034
Either revert the changes to the migration, or run repair to update the schema history.
Need more flexibility with validation rules? Learn more: https://rd.gt/3AbJUZE
	at org.flywaydb.core.Flyway.lambda$migrate$0(Flyway.java:177)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:210)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:164)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 17 common frames omitted
2025-06-17 18:14:13.049 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 23785 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 18:14:13.052 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 18:14:13.052 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 18:14:14.403 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 18:14:14.405 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 18:14:14.602 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 188 ms. Found 5 JPA repository interfaces.
2025-06-17 18:14:14.625 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 18:14:14.626 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 18:14:14.648 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:14:14.648 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:14:14.649 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:14:14.649 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:14:14.649 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:14:14.649 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-06-17 18:14:15.534 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 18:14:15.548 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 18:14:15.549 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 18:14:15.610 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 18:14:15.611 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2492 ms
2025-06-17 18:14:16.057 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 18:14:16.246 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@785ef70f
2025-06-17 18:14:16.248 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 18:14:16.280 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 18:14:16.311 [main] INFO  o.f.c.i.schemahistory.JdbcTableSchemaHistory - Schema history table "public"."flyway_schema_history" does not exist yet
2025-06-17 18:14:16.314 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.016s)
2025-06-17 18:14:16.327 [main] INFO  o.f.c.i.schemahistory.JdbcTableSchemaHistory - Creating Schema History table "public"."flyway_schema_history" ...
2025-06-17 18:14:16.403 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": << Empty Schema >>
2025-06-17 18:14:16.423 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Migrating schema "public" to version "1 - Create tables"
2025-06-17 18:14:16.506 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Successfully applied 1 migration to schema "public", now at version v1 (execution time 00:00.063s)
2025-06-17 18:14:16.629 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 18:14:16.693 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 18:14:16.735 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 18:14:17.079 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 18:14:17.145 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 18:14:18.290 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 18:14:18.331 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 18:14:19.037 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 18:14:20.743 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 18:14:20.852 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 18:14:21.294 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 18:14:22.187 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 18:14:22.206 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 9.872 seconds (process running for 10.479)
2025-06-17 18:14:22.447 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 18:14:26.044 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 18:14:26.045 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 18:14:26.055 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2025-06-17 18:14:26.395 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 18:14:26.395 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 18:14:26.395 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 18:14:26.396 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 18:14:26.546 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 18:14:26.561 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 18:14:26.561 [http-nio-8081-exec-3] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 18:14:26.614 [http-nio-8081-exec-3] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-06-17 18:14:28.559 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1284)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-17 18:14:28.751 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 18:14:28.769 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 18:14:28.769 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 18:14:28.769 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 18:14:28.773 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 18:14:28.775 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 18:14:28.775 [http-nio-8081-exec-7] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 18:15:28.720 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B2X
2025-06-17 18:15:28.804 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:15:28.947 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750158928817_cf331962.jpg
2025-06-17 18:15:28.958 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 18:15:29.069 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:15:29.126 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 9
2025-06-17 18:15:29.126 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 9, photoPath: checkin/2025/06/17/checkin_1750158928817_cf331962.jpg
2025-06-17 18:15:29.129 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750158928817_cf331962.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750158928817_cf331962.jpg
2025-06-17 18:15:38.269 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 18:15:38.273 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:15:38.287 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:15:38.295 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 9, photoPath: checkin/2025/06/17/checkin_1750158928817_cf331962.jpg
2025-06-17 18:15:38.295 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750158928817_cf331962.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750158928817_cf331962.jpg
2025-06-17 18:15:38.454 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:15:38.456 [http-nio-8081-exec-5] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo: ./uploads/checkin/2025/06/17/checkin_1750158928817_cf331962.jpg
2025-06-17 18:15:38.456 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:15:38.457 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.controller.PhotoController - Successfully serving photo: ./uploads/checkin/2025/06/17/checkin_1750158928817_cf331962.jpg
2025-06-17 18:15:38.459 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:15:38.944 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:15:38.947 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:15:38.949 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:16:20.626 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:16:20.662 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:16:20.674 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:16:35.891 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:16:35.902 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:16:35.905 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:17:41.382 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:17:41.457 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:17:41.464 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:17:43.962 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:17:43.973 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:17:43.984 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:17:52.993 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B2X
2025-06-17 18:17:52.996 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:17:52.998 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:17:53.000 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:17:53.002 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:17:53.009 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750159073004_1436b0b1.jpg
2025-06-17 18:17:53.027 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        payments
        (amount, created_at, parking_ticket_id, payment_method, payment_time, reference_number, status) 
    values
        (?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:17:53.051 [http-nio-8081-exec-9] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Generate invoice untuk ticket ID: 9
2025-06-17 18:17:53.090 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        ir1_0.id,
        ir1_0.base_amount,
        ir1_0.check_in_time,
        ir1_0.check_out_time,
        ir1_0.created_at,
        ir1_0.discount_amount,
        ir1_0.duration_minutes,
        ir1_0.invoice_date,
        ir1_0.invoice_number,
        ir1_0.member_name,
        ir1_0.operator_name,
        ir1_0.parking_ticket_id,
        ir1_0.payment_method,
        ir1_0.payment_reference,
        ir1_0.plate_number,
        ir1_0.status,
        ir1_0.total_amount,
        ir1_0.voucher_code 
    from
        invoice_receipts ir1_0 
    where
        ir1_0.invoice_date between ? and ?
2025-06-17 18:17:53.113 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_receipts
        (base_amount, check_in_time, check_out_time, created_at, discount_amount, duration_minutes, invoice_date, invoice_number, member_name, operator_name, parking_ticket_id, payment_method, payment_reference, plate_number, status, total_amount, voucher_code) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:17:53.128 [http-nio-8081-exec-9] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Invoice INV-202506170001 berhasil dibuat
2025-06-17 18:17:53.140 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Check-out berhasil dengan invoice: INV-202506170001
2025-06-17 18:17:53.159 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        parking_tickets 
    set
        check_in_gate=?,
        check_in_operator=?,
        check_in_photo_path=?,
        check_in_time=?,
        check_out_gate=?,
        check_out_operator=?,
        check_out_photo_path=?,
        check_out_time=?,
        member_id=?,
        member_name=?,
        parking_fee=?,
        plate_number=?,
        status=?,
        updated_at=?,
        vehicle_type=? 
    where
        id=?
2025-06-17 18:18:43.121 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:18:43.154 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:18:43.192 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 18:18:43.195 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:18:43.211 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:18:43.212 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:18:44.334 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:18:44.338 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 18:18:44.343 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:18:44.343 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:18:44.345 [http-nio-8081-exec-3] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:18:44.367 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:18:46.374 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:18:46.377 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:18:46.380 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:18:46.381 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 18:18:46.402 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:18:46.409 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:19:12.205 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B2X
2025-06-17 18:19:12.210 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:19:12.218 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750159152213_dac9a248.jpg
2025-06-17 18:19:12.222 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 18:19:12.229 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:19:12.244 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 10
2025-06-17 18:19:12.244 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 10, photoPath: checkin/2025/06/17/checkin_1750159152213_dac9a248.jpg
2025-06-17 18:19:12.244 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750159152213_dac9a248.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750159152213_dac9a248.jpg
2025-06-17 18:19:25.966 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 18:19:25.973 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:19:25.976 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:19:25.979 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 10, photoPath: checkin/2025/06/17/checkin_1750159152213_dac9a248.jpg
2025-06-17 18:19:25.979 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750159152213_dac9a248.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750159152213_dac9a248.jpg
2025-06-17 18:19:26.129 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:19:26.134 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:19:26.134 [http-nio-8081-exec-9] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo: ./uploads/checkin/2025/06/17/checkin_1750159152213_dac9a248.jpg
2025-06-17 18:19:26.137 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:19:26.137 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.controller.PhotoController - Successfully serving photo: ./uploads/checkin/2025/06/17/checkin_1750159152213_dac9a248.jpg
2025-06-17 18:19:26.637 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:19:26.646 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:19:26.659 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:19:52.781 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B2X
2025-06-17 18:19:52.784 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:19:52.786 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:19:52.788 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:19:52.791 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:19:52.795 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750159192793_f9a15075.jpg
2025-06-17 18:19:52.797 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        payments
        (amount, created_at, parking_ticket_id, payment_method, payment_time, reference_number, status) 
    values
        (?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:19:52.802 [http-nio-8081-exec-3] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Generate invoice untuk ticket ID: 10
2025-06-17 18:19:52.808 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        ir1_0.id,
        ir1_0.base_amount,
        ir1_0.check_in_time,
        ir1_0.check_out_time,
        ir1_0.created_at,
        ir1_0.discount_amount,
        ir1_0.duration_minutes,
        ir1_0.invoice_date,
        ir1_0.invoice_number,
        ir1_0.member_name,
        ir1_0.operator_name,
        ir1_0.parking_ticket_id,
        ir1_0.payment_method,
        ir1_0.payment_reference,
        ir1_0.plate_number,
        ir1_0.status,
        ir1_0.total_amount,
        ir1_0.voucher_code 
    from
        invoice_receipts ir1_0 
    where
        ir1_0.invoice_date between ? and ?
2025-06-17 18:19:52.844 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_receipts
        (base_amount, check_in_time, check_out_time, created_at, discount_amount, duration_minutes, invoice_date, invoice_number, member_name, operator_name, parking_ticket_id, payment_method, payment_reference, plate_number, status, total_amount, voucher_code) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:19:52.846 [http-nio-8081-exec-3] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Invoice INV-202506170002 berhasil dibuat
2025-06-17 18:19:52.850 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Check-out berhasil dengan invoice: INV-202506170002
2025-06-17 18:19:52.853 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        parking_tickets 
    set
        check_in_gate=?,
        check_in_operator=?,
        check_in_photo_path=?,
        check_in_time=?,
        check_out_gate=?,
        check_out_operator=?,
        check_out_photo_path=?,
        check_out_time=?,
        member_id=?,
        member_name=?,
        parking_fee=?,
        plate_number=?,
        status=?,
        updated_at=?,
        vehicle_type=? 
    where
        id=?
2025-06-17 18:20:51.058 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B2X
2025-06-17 18:20:51.093 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:20:51.100 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750159251098_a669c07f.jpg
2025-06-17 18:20:51.101 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 18:20:51.104 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:20:51.110 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 11
2025-06-17 18:20:51.110 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 11, photoPath: checkin/2025/06/17/checkin_1750159251098_a669c07f.jpg
2025-06-17 18:20:51.111 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750159251098_a669c07f.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750159251098_a669c07f.jpg
2025-06-17 18:20:59.457 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 18:20:59.458 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:20:59.460 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:20:59.462 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 11, photoPath: checkin/2025/06/17/checkin_1750159251098_a669c07f.jpg
2025-06-17 18:20:59.462 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750159251098_a669c07f.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750159251098_a669c07f.jpg
2025-06-17 18:20:59.584 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:20:59.586 [http-nio-8081-exec-7] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo: ./uploads/checkin/2025/06/17/checkin_1750159251098_a669c07f.jpg
2025-06-17 18:20:59.603 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.controller.PhotoController - Successfully serving photo: ./uploads/checkin/2025/06/17/checkin_1750159251098_a669c07f.jpg
2025-06-17 18:20:59.604 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:20:59.624 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:21:00.088 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:21:00.090 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:21:00.091 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:22:32.525 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:22:32.581 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:22:32.611 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:22:35.759 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:22:35.763 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:22:35.786 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:22:53.608 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B2X
2025-06-17 18:22:53.613 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:22:53.616 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:22:53.617 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:22:53.619 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:22:53.626 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750159373620_2b9da6b3.jpg
2025-06-17 18:22:53.632 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        payments
        (amount, created_at, parking_ticket_id, payment_method, payment_time, reference_number, status) 
    values
        (?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:22:53.637 [http-nio-8081-exec-5] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Generate invoice untuk ticket ID: 11
2025-06-17 18:22:53.647 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        ir1_0.id,
        ir1_0.base_amount,
        ir1_0.check_in_time,
        ir1_0.check_out_time,
        ir1_0.created_at,
        ir1_0.discount_amount,
        ir1_0.duration_minutes,
        ir1_0.invoice_date,
        ir1_0.invoice_number,
        ir1_0.member_name,
        ir1_0.operator_name,
        ir1_0.parking_ticket_id,
        ir1_0.payment_method,
        ir1_0.payment_reference,
        ir1_0.plate_number,
        ir1_0.status,
        ir1_0.total_amount,
        ir1_0.voucher_code 
    from
        invoice_receipts ir1_0 
    where
        ir1_0.invoice_date between ? and ?
2025-06-17 18:22:53.661 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_receipts
        (base_amount, check_in_time, check_out_time, created_at, discount_amount, duration_minutes, invoice_date, invoice_number, member_name, operator_name, parking_ticket_id, payment_method, payment_reference, plate_number, status, total_amount, voucher_code) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:22:53.664 [http-nio-8081-exec-5] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Invoice INV-202506170003 berhasil dibuat
2025-06-17 18:22:53.667 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Check-out berhasil dengan invoice: INV-202506170003
2025-06-17 18:22:53.681 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        parking_tickets 
    set
        check_in_gate=?,
        check_in_operator=?,
        check_in_photo_path=?,
        check_in_time=?,
        check_out_gate=?,
        check_out_operator=?,
        check_out_photo_path=?,
        check_out_time=?,
        member_id=?,
        member_name=?,
        parking_fee=?,
        plate_number=?,
        status=?,
        updated_at=?,
        vehicle_type=? 
    where
        id=?
2025-06-17 18:23:55.495 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:23:55.501 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 18:23:55.505 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:23:55.506 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:23:55.518 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:23:55.518 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:23:56.542 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:23:56.543 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 18:23:56.545 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:23:56.545 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:23:56.547 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:23:56.549 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:23:58.565 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 18:23:58.569 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:23:58.571 [http-nio-8081-exec-3] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:23:58.578 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B2X
2025-06-17 18:23:58.582 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:23:58.585 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:24:02.071 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 18:24:02.076 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:24:02.080 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:24:03.106 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 18:24:03.108 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:24:03.110 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:26:47.881 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B2X
2025-06-17 18:26:47.925 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:26:48.180 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B2X
2025-06-17 18:27:23.182 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B9012GHI
2025-06-17 18:27:23.205 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:27:23.212 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750159643207_b558f5fa.jpg
2025-06-17 18:27:23.218 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 18:27:23.436 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:27:23.446 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 12
2025-06-17 18:27:23.447 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 12, photoPath: checkin/2025/06/17/checkin_1750159643207_b558f5fa.jpg
2025-06-17 18:27:23.447 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750159643207_b558f5fa.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750159643207_b558f5fa.jpg
2025-06-17 18:27:54.027 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 18:27:54.032 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 18:27:54.033 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 18:27:54.035 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 18:27:54.111 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 18:27:54.134 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:27:54.162 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:27:54.167 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:27:54.188 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:27:54.192 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 4 tickets
2025-06-17 18:28:29.390 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B9012GHI
2025-06-17 18:28:29.403 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:28:29.409 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:28:29.412 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 12, photoPath: checkin/2025/06/17/checkin_1750159643207_b558f5fa.jpg
2025-06-17 18:28:29.413 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750159643207_b558f5fa.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750159643207_b558f5fa.jpg
2025-06-17 18:28:29.545 [http-nio-8081-exec-5] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo: ./uploads/checkin/2025/06/17/checkin_1750159643207_b558f5fa.jpg
2025-06-17 18:28:29.547 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B9012GHI
2025-06-17 18:28:29.560 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.controller.PhotoController - Successfully serving photo: ./uploads/checkin/2025/06/17/checkin_1750159643207_b558f5fa.jpg
2025-06-17 18:28:29.563 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:28:29.574 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:28:30.050 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B9012GHI
2025-06-17 18:28:30.053 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:28:30.056 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:29:59.722 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B9012GHI
2025-06-17 18:29:59.922 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:29:59.930 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:30:08.982 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Unexpected error
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:441)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1284)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2025-06-17 18:30:42.679 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 18:30:42.683 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 18:30:42.683 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 18:30:42.683 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 18:30:42.709 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 18:30:42.717 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:30:42.725 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:30:42.727 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:30:42.730 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:30:42.732 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 4 tickets
2025-06-17 18:30:52.523 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B9012GHI
2025-06-17 18:30:52.526 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:30:52.527 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:30:53.059 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B9012GHI
2025-06-17 18:30:53.062 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:30:53.065 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:31:06.402 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B9012GHI
2025-06-17 18:31:06.405 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:31:06.406 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:31:06.407 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B9012GHI
2025-06-17 18:31:06.410 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:31:06.417 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750159866412_e2d505f8.jpg
2025-06-17 18:31:06.421 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        payments
        (amount, created_at, parking_ticket_id, payment_method, payment_time, reference_number, status) 
    values
        (?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:31:06.426 [http-nio-8081-exec-10] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Generate invoice untuk ticket ID: 12
2025-06-17 18:31:06.431 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ir1_0.id,
        ir1_0.base_amount,
        ir1_0.check_in_time,
        ir1_0.check_out_time,
        ir1_0.created_at,
        ir1_0.discount_amount,
        ir1_0.duration_minutes,
        ir1_0.invoice_date,
        ir1_0.invoice_number,
        ir1_0.member_name,
        ir1_0.operator_name,
        ir1_0.parking_ticket_id,
        ir1_0.payment_method,
        ir1_0.payment_reference,
        ir1_0.plate_number,
        ir1_0.status,
        ir1_0.total_amount,
        ir1_0.voucher_code 
    from
        invoice_receipts ir1_0 
    where
        ir1_0.invoice_date between ? and ?
2025-06-17 18:31:06.442 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_receipts
        (base_amount, check_in_time, check_out_time, created_at, discount_amount, duration_minutes, invoice_date, invoice_number, member_name, operator_name, parking_ticket_id, payment_method, payment_reference, plate_number, status, total_amount, voucher_code) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:31:06.446 [http-nio-8081-exec-10] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Invoice INV-202506170004 berhasil dibuat
2025-06-17 18:31:06.452 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Check-out berhasil dengan invoice: INV-202506170004
2025-06-17 18:31:06.456 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        parking_tickets 
    set
        check_in_gate=?,
        check_in_operator=?,
        check_in_photo_path=?,
        check_in_time=?,
        check_out_gate=?,
        check_out_operator=?,
        check_out_photo_path=?,
        check_out_time=?,
        member_id=?,
        member_name=?,
        parking_fee=?,
        plate_number=?,
        status=?,
        updated_at=?,
        vehicle_type=? 
    where
        id=?
2025-06-17 18:31:18.898 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B9012GHI
2025-06-17 18:31:18.926 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B9012GHI
2025-06-17 18:31:18.945 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:31:18.945 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:31:18.966 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B9012GHI
2025-06-17 18:31:18.984 [http-nio-8081-exec-3] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B9012GHI
2025-06-17 18:31:20.024 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B9012GHI
2025-06-17 18:31:20.028 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:31:20.038 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B9012GHI
2025-06-17 18:31:20.039 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B9012GHI
2025-06-17 18:31:20.041 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:31:20.046 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B9012GHI
2025-06-17 18:31:22.056 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B9012GHI
2025-06-17 18:31:22.058 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B9012GHI
2025-06-17 18:31:22.059 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:31:22.061 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B9012GHI
2025-06-17 18:31:22.071 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:31:22.077 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B9012GHI
2025-06-17 18:31:48.693 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B9012GHI
2025-06-17 18:31:48.720 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:31:48.725 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B9012GHI
2025-06-17 18:31:49.755 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B9012GHI
2025-06-17 18:31:49.758 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:31:49.760 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B9012GHI
2025-06-17 18:31:51.781 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B9012GHI
2025-06-17 18:31:51.784 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:31:51.789 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B9012GHI
2025-06-17 18:32:15.945 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 18:32:15.992 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 18:32:24.825 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B22FRD
2025-06-17 18:32:24.826 [http-nio-8081-exec-3] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B22FRD sudah parkir
2025-06-17 18:32:31.490 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B223FRD
2025-06-17 18:32:31.522 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:32:31.542 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750159951537_7cfbc4c6.jpg
2025-06-17 18:32:31.552 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 18:32:31.574 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:32:31.601 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 13
2025-06-17 18:32:31.601 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 13, photoPath: checkin/2025/06/17/checkin_1750159951537_7cfbc4c6.jpg
2025-06-17 18:32:31.601 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750159951537_7cfbc4c6.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750159951537_7cfbc4c6.jpg
2025-06-17 18:32:44.560 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 18:32:44.563 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:32:44.566 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 18:32:45.590 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 18:32:45.616 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:32:45.622 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 18:32:47.640 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 18:32:47.644 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:32:47.649 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Tidak ada kendaraan aktif dengan plat nomor: B123FRD
2025-06-17 18:33:01.671 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'null', date: 2025-06-17, status: 'null'
2025-06-17 18:33:01.671 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'null', date: 2025-06-17, status: null
2025-06-17 18:33:01.672 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Applying date filter only: date=2025-06-17
2025-06-17 18:33:01.672 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Date range: 2025-06-17T00:00 to 2025-06-17T23:59:59
2025-06-17 18:33:01.678 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.check_in_time between ? and ? 
    fetch
        first ? rows only
2025-06-17 18:33:01.681 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:33:01.684 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:33:01.688 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:33:01.691 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:33:01.692 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:33:01.694 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 5 tickets
2025-06-17 18:33:08.371 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'B', date: 2025-06-17, status: 'null'
2025-06-17 18:33:08.371 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B', date: 2025-06-17, status: null
2025-06-17 18:33:08.371 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B, date=2025-06-17
2025-06-17 18:33:08.570 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 18:33:08.585 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 18:33:08.585 [http-nio-8081-exec-4] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 18:33:09.971 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'B1', date: 2025-06-17, status: 'null'
2025-06-17 18:33:09.971 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B1', date: 2025-06-17, status: null
2025-06-17 18:33:09.971 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B1, date=2025-06-17
2025-06-17 18:33:09.981 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 18:33:09.983 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 18:33:09.983 [http-nio-8081-exec-5] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 18:33:10.140 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'B12', date: 2025-06-17, status: 'null'
2025-06-17 18:33:10.140 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B12', date: 2025-06-17, status: null
2025-06-17 18:33:10.140 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B12, date=2025-06-17
2025-06-17 18:33:10.144 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 18:33:10.145 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 18:33:10.146 [http-nio-8081-exec-7] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 18:33:10.398 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'B123', date: 2025-06-17, status: 'null'
2025-06-17 18:33:10.398 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B123', date: 2025-06-17, status: null
2025-06-17 18:33:10.398 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B123, date=2025-06-17
2025-06-17 18:33:10.400 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 18:33:10.409 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 18:33:10.410 [http-nio-8081-exec-9] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 18:33:10.694 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'B123F', date: 2025-06-17, status: 'null'
2025-06-17 18:33:10.694 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B123F', date: 2025-06-17, status: null
2025-06-17 18:33:10.694 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B123F, date=2025-06-17
2025-06-17 18:33:10.696 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 18:33:10.701 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 18:33:10.701 [http-nio-8081-exec-8] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 18:33:10.963 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'B123FR', date: 2025-06-17, status: 'null'
2025-06-17 18:33:10.963 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B123FR', date: 2025-06-17, status: null
2025-06-17 18:33:10.963 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B123FR, date=2025-06-17
2025-06-17 18:33:10.964 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 18:33:10.967 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 18:33:10.967 [http-nio-8081-exec-4] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 18:33:11.212 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Getting vehicle activities - plateNumber: 'B123FRD', date: 2025-06-17, status: 'null'
2025-06-17 18:33:11.212 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Cleaned parameters - plateNumber: 'B123FRD', date: 2025-06-17, status: null
2025-06-17 18:33:11.212 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Applying plate and date filters: plate=B123FRD, date=2025-06-17
2025-06-17 18:33:11.213 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and date(pt1_0.check_in_time)=? 
    fetch
        first ? rows only
2025-06-17 18:33:11.215 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Query executed successfully. Found 0 tickets
2025-06-17 18:33:11.215 [http-nio-8081-exec-5] WARN  com.parkee.parkingpos.service.ParkingService - No tickets found for the given criteria. Please check if data exists for the specified filters.
2025-06-17 18:33:46.871 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 18:33:46.887 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 18:33:48.276 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 18:33:48.283 [http-nio-8081-exec-7] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 18:33:48.497 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 18:33:48.503 [http-nio-8081-exec-6] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 18:33:48.720 [http-nio-8081-exec-9] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 18:33:48.721 [http-nio-8081-exec-9] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 18:33:48.923 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 18:33:48.925 [http-nio-8081-exec-1] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 18:33:49.170 [http-nio-8081-exec-8] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 18:33:49.172 [http-nio-8081-exec-8] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 18:33:49.390 [http-nio-8081-exec-10] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 18:33:49.393 [http-nio-8081-exec-10] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 18:33:49.563 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 18:33:49.565 [http-nio-8081-exec-4] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 18:33:49.779 [http-nio-8081-exec-3] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 18:33:49.780 [http-nio-8081-exec-3] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 18:33:49.973 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 18:33:49.977 [http-nio-8081-exec-5] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 18:33:55.937 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 18:33:55.938 [http-nio-8081-exec-2] ERROR c.p.parkingpos.exception.GlobalExceptionHandler - Business exception: Kendaraan dengan plat nomor B123FRD sudah parkir
2025-06-17 18:34:46.545 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 18:34:46.564 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 18:34:46.575 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-17 18:36:03.316 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Starting ParkingPosApplication using Java 22.0.1 with PID 25177 (/Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service/target/classes started by bilawalrizky in /Users/bilawalrizky/Documents/2025 - Project/parkee-technical-test/5-Parking-POS/parking-pos-service)
2025-06-17 18:36:03.319 [main] DEBUG com.parkee.parkingpos.ParkingPosApplication - Running with Spring Boot v3.3.6, Spring v6.1.15
2025-06-17 18:36:03.320 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-17 18:36:05.141 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 18:36:05.144 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-17 18:36:05.392 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 237 ms. Found 5 JPA repository interfaces.
2025-06-17 18:36:05.414 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-17 18:36:05.416 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-17 18:36:05.441 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.InvoiceReceiptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:36:05.442 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:36:05.442 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.ParkingTicketRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:36:05.443 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:36:05.443 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.parkee.parkingpos.domain.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-17 18:36:05.443 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-06-17 18:36:06.537 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-06-17 18:36:06.554 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-06-17 18:36:06.555 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-06-17 18:36:06.628 [main] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-17 18:36:06.629 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3231 ms
2025-06-17 18:36:08.164 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-17 18:36:08.867 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@23358740
2025-06-17 18:36:08.870 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-17 18:36:08.945 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5434/parking_pos_db (PostgreSQL 16.2)
2025-06-17 18:36:09.062 [main] INFO  org.flywaydb.core.internal.command.DbValidate - Successfully validated 1 migration (execution time 00:00.054s)
2025-06-17 18:36:09.098 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-06-17 18:36:09.106 [main] INFO  org.flywaydb.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-06-17 18:36:09.453 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-17 18:36:09.619 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-06-17 18:36:09.689 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-17 18:36:10.268 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-17 18:36:10.348 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-17 18:36:11.732 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-17 18:36:11.802 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 18:36:12.630 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-17 18:36:14.427 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-06-17 18:36:14.535 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-17 18:36:14.993 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 8 endpoints beneath base path '/actuator'
2025-06-17 18:36:15.881 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api'
2025-06-17 18:36:15.898 [main] INFO  com.parkee.parkingpos.ParkingPosApplication - Started ParkingPosApplication in 13.423 seconds (process running for 14.038)
2025-06-17 18:36:16.240 [main] INFO  com.parkee.parkingpos.ApplicationStartupRunner - 
----------------------------------------------------------
	Application 'parking-pos' is running! Access URLs:
	Local: 		http://localhost:8081/api
	External: 	http://127.0.0.1:8081/api
	Profile(s): 	default
	Swagger UI: 	http://localhost:8081/api/swagger-ui.html
----------------------------------------------------------
2025-06-17 18:36:19.788 [http-nio-8081-exec-1] INFO  o.a.c.c.ContainerBase.[Tomcat].[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-17 18:36:19.788 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-17 18:36:19.790 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-06-17 18:36:20.152 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-in untuk plate number: B123FRD
2025-06-17 18:36:20.790 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:36:20.861 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkin/2025/06/17/checkin_1750160180800_e4e0bc24.jpg
2025-06-17 18:36:20.866 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.active,
        m1_0.balance,
        m1_0.email,
        m1_0.last_activity,
        m1_0.member_code,
        m1_0.name,
        m1_0.phone_number,
        m1_0.registered_at,
        m1_0.updated_at,
        m1_0.vehicle_plate_number 
    from
        members m1_0 
    where
        m1_0.vehicle_plate_number=? 
        and m1_0.active
2025-06-17 18:36:20.902 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        parking_tickets
        (check_in_gate, check_in_operator, check_in_photo_path, check_in_time, check_out_gate, check_out_operator, check_out_photo_path, check_out_time, created_at, member_id, member_name, parking_fee, plate_number, status, updated_at, vehicle_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:36:20.934 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Check-in berhasil dengan ticket ID: 14
2025-06-17 18:36:20.934 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 14, photoPath: checkin/2025/06/17/checkin_1750160180800_e4e0bc24.jpg
2025-06-17 18:36:20.935 [http-nio-8081-exec-1] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750160180800_e4e0bc24.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750160180800_e4e0bc24.jpg
2025-06-17 18:36:36.764 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Mencari active ticket untuk plate: B123FRD
2025-06-17 18:36:36.768 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:36:36.778 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:36:36.783 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - Mapping ticket ID: 14, photoPath: checkin/2025/06/17/checkin_1750160180800_e4e0bc24.jpg
2025-06-17 18:36:36.784 [http-nio-8081-exec-2] INFO  com.parkee.parkingpos.service.ParkingService - DTO mapped - photoPath: checkin/2025/06/17/checkin_1750160180800_e4e0bc24.jpg, photoUrl: http://localhost:8081/api/parking/photos/checkin/2025/06/17/checkin_1750160180800_e4e0bc24.jpg
2025-06-17 18:36:36.934 [http-nio-8081-exec-4] DEBUG com.parkee.parkingpos.controller.PhotoController - Attempting to serve photo: ./uploads/checkin/2025/06/17/checkin_1750160180800_e4e0bc24.jpg
2025-06-17 18:36:36.935 [http-nio-8081-exec-4] INFO  com.parkee.parkingpos.controller.PhotoController - Successfully serving photo: ./uploads/checkin/2025/06/17/checkin_1750160180800_e4e0bc24.jpg
2025-06-17 18:36:36.939 [http-nio-8081-exec-5] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 18:36:36.946 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:36:36.952 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:36:37.432 [http-nio-8081-exec-6] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 18:36:37.434 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:36:37.436 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:36:54.609 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Processing check-out untuk plate: B123FRD
2025-06-17 18:36:54.613 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:36:54.615 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.amount,
        p1_0.created_at,
        p1_0.parking_ticket_id,
        p1_0.payment_method,
        p1_0.payment_time,
        p1_0.reference_number,
        p1_0.status 
    from
        payments p1_0 
    where
        p1_0.parking_ticket_id=?
2025-06-17 18:36:54.617 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Menghitung biaya parkir untuk plate: B123FRD
2025-06-17 18:36:54.619 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        pt1_0.id,
        pt1_0.check_in_gate,
        pt1_0.check_in_operator,
        pt1_0.check_in_photo_path,
        pt1_0.check_in_time,
        pt1_0.check_out_gate,
        pt1_0.check_out_operator,
        pt1_0.check_out_photo_path,
        pt1_0.check_out_time,
        pt1_0.created_at,
        pt1_0.member_id,
        pt1_0.member_name,
        pt1_0.parking_fee,
        pt1_0.plate_number,
        pt1_0.status,
        pt1_0.updated_at,
        pt1_0.vehicle_type 
    from
        parking_tickets pt1_0 
    where
        pt1_0.plate_number=? 
        and pt1_0.status=?
2025-06-17 18:36:54.622 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.util.FileUploadUtil - File uploaded successfully: checkout/2025/06/17/checkout_1750160214620_7efbd211.jpg
2025-06-17 18:36:54.628 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        payments
        (amount, created_at, parking_ticket_id, payment_method, payment_time, reference_number, status) 
    values
        (?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:36:54.648 [http-nio-8081-exec-7] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Generate invoice untuk ticket ID: 14
2025-06-17 18:36:54.663 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        ir1_0.id,
        ir1_0.base_amount,
        ir1_0.check_in_time,
        ir1_0.check_out_time,
        ir1_0.created_at,
        ir1_0.discount_amount,
        ir1_0.duration_minutes,
        ir1_0.invoice_date,
        ir1_0.invoice_number,
        ir1_0.member_name,
        ir1_0.operator_name,
        ir1_0.parking_ticket_id,
        ir1_0.payment_method,
        ir1_0.payment_reference,
        ir1_0.plate_number,
        ir1_0.status,
        ir1_0.total_amount,
        ir1_0.voucher_code 
    from
        invoice_receipts ir1_0 
    where
        ir1_0.invoice_date between ? and ?
2025-06-17 18:36:54.682 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        invoice_receipts
        (base_amount, check_in_time, check_out_time, created_at, discount_amount, duration_minutes, invoice_date, invoice_number, member_name, operator_name, parking_ticket_id, payment_method, payment_reference, plate_number, status, total_amount, voucher_code) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-06-17 18:36:54.685 [http-nio-8081-exec-7] INFO  c.parkee.parkingpos.service.InvoiceReceiptService - Invoice INV-202506170005 berhasil dibuat
2025-06-17 18:36:54.691 [http-nio-8081-exec-7] INFO  com.parkee.parkingpos.service.ParkingService - Check-out berhasil dengan invoice: INV-202506170005
2025-06-17 18:36:54.701 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        parking_tickets 
    set
        check_in_gate=?,
        check_in_operator=?,
        check_in_photo_path=?,
        check_in_time=?,
        check_out_gate=?,
        check_out_operator=?,
        check_out_photo_path=?,
        check_out_time=?,
        member_id=?,
        member_name=?,
        parking_fee=?,
        plate_number=?,
        status=?,
        updated_at=?,
        vehicle_type=? 
    where
        id=?
2025-06-17 18:37:24.094 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-17 18:37:24.099 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-17 18:37:24.104 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
